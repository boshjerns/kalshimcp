{"components": {"schemas": {"Announcement": {"properties": {"delivery_time": {"description": "The time the announcement was delivered.", "format": "date-time", "type": "string"}, "message": {"description": "The message contained within the announcement.", "type": "string"}, "status": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.AnnouncementStatus", "description": "The current status of this announcement.", "enum": ["active", "inactive"], "type": "string"}, "type": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.AnnouncementType", "description": "The type of the announcement.", "enum": ["info", "warning", "error"], "type": "string"}}, "type": "object"}, "ApiKey": {"properties": {"api_key_id": {"description": "Unique identifier for the API key.", "type": "string"}, "created_ts": {"description": "Timestamp when the API key was created.", "format": "date-time", "type": "string"}, "name": {"description": "User-provided name for the API key.", "type": "string"}}, "type": "object"}, "AssociatedEvent": {"properties": {"active_quoters": {"description": "List of active quoters for this event.", "items": {"type": "string"}, "type": "array"}, "is_yes_only": {"description": "Whether only the 'yes' side can be used for this event.", "type": "boolean"}, "size_max": {"description": "Maximum number of markets from this event (inclusive). Null means no limit.", "type": "integer"}, "size_min": {"description": "Minimum number of markets from this event (inclusive). Null means no limit.", "type": "integer"}, "ticker": {"description": "The event ticker.", "type": "string"}}, "type": "object"}, "BatchCancelOrdersIndividualResponse": {"properties": {"error": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError", "description": "Error information if the order cancellation failed. If this field is populated, the order field will be null.", "type": "object"}, "order": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Order", "description": "Details of the canceled order. Will be null if an error occurred.", "type": "object"}, "order_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderUUID", "description": "The order ID to identify which order had an error during batch cancellation.", "type": "string"}, "reduced_by": {"description": "The number of contracts that were successfully canceled from this order.", "type": "integer"}}, "type": "object"}, "BatchCreateOrdersIndividualResponse": {"properties": {"client_order_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.ClientOrderID", "description": "The client-provided order ID from the request. This helps identify which order had an error in batch operations.", "type": "string"}, "error": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError", "description": "Error information if the order creation failed. If this field is populated, the order field will be null.", "type": "object"}, "order": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Order", "description": "Order confirmation details when the order is successfully created. Will be null if an error occurred.", "type": "object"}}, "type": "object"}, "DailySchedule": {"properties": {"close_time": {"description": "Closing time in ET (Eastern Time) format HH:MM.", "type": "string"}, "open_time": {"description": "Opening time in ET (Eastern Time) format HH:MM.", "type": "string"}}, "type": "object"}, "EventPosition": {"properties": {"event_exposure": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Cost of the aggregate event position in cents.", "format": "int64", "type": "integer"}, "event_exposure_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Cost of the aggregate event position in dollars.", "type": "string"}, "event_ticker": {"description": "Unique identifier for events.", "type": "string"}, "fees_paid": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Fees paid on fill orders, in cents.", "format": "int64", "type": "integer"}, "fees_paid_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Fees paid on fill orders, in dollars.", "type": "string"}, "realized_pnl": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Locked in profit and loss, in cents.", "format": "int64", "type": "integer"}, "realized_pnl_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Locked in profit and loss, in dollars.", "type": "string"}, "resting_order_count": {"description": "Aggregate size of resting orders in contract units.", "type": "integer"}, "total_cost": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Total spent on this event in cents.", "format": "int64", "type": "integer"}, "total_cost_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Total spent on this event in dollars.", "type": "string"}}, "type": "object"}, "ForecastPercentilesPoint": {"properties": {"end_period_ts": {"type": "integer"}, "event_ticker": {"type": "string"}, "percentile_points": {"items": {"properties": {"formatted_forecast": {"type": "string"}, "numerical_forecast": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Number"}, "percentile": {"type": "integer"}, "raw_numerical_forecast": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Number"}}, "type": "object"}, "type": "array"}, "period_interval": {"type": "integer"}}, "type": "object"}, "GenericObject": {"additionalProperties": true, "description": "Generic object type", "type": "object"}, "IncentiveProgram": {"properties": {"discount_factor_bps": {"type": "integer"}, "end_date": {"format": "date-time", "type": "string"}, "event_ticker": {"type": "string"}, "id": {"type": "string"}, "incentive_type": {"type": "string"}, "market_ticker": {"type": "string"}, "paid_out": {"type": "boolean"}, "period_reward": {"description": "Period reward in centicents.", "type": "integer"}, "series_ticker": {"type": "string"}, "start_date": {"format": "date-time", "type": "string"}, "target_size": {"type": "integer"}}, "type": "object"}, "LookupPoint": {"properties": {"event_ticker": {"description": "Event ticker for the lookup point.", "type": "string"}, "last_queried_ts": {"description": "Timestamp when this lookup was last queried.", "format": "date-time", "type": "string"}, "market_ticker": {"description": "Market ticker for the lookup point.", "type": "string"}, "selected_markets": {"description": "Markets that were selected for this lookup.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.TickerPair"}, "type": "array"}}, "type": "object"}, "MaintenanceWindow": {"properties": {"end_datetime": {"description": "End date and time of the maintenance window.", "format": "date-time", "type": "string"}, "start_datetime": {"description": "Start date and time of the maintenance window.", "format": "date-time", "type": "string"}}, "type": "object"}, "Market": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Market"}, "MarketCandlestick": {"properties": {"end_period_ts": {"description": "Unix timestamp for the inclusive end of the candlestick period.", "type": "integer"}, "open_interest": {"description": "Number of contracts bought on the market by end of the candlestick period (end_period_ts).", "type": "integer"}, "price": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.PriceDistribution", "description": "Open, high, low, close (OHLC) and more data for trade YES contract prices on the market during the candlestick period.", "type": "object"}, "volume": {"description": "Number of contracts bought on the market during the candlestick period.", "type": "integer"}, "yes_ask": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.BidAskDistribution", "description": "Open, high, low, close (OHLC) data for YES sell offers on the market during the candlestick period.", "type": "object"}, "yes_bid": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.BidAskDistribution", "description": "Open, high, low, close (OHLC) data for YES buy offers on the market during the candlestick period.", "type": "object"}}, "type": "object"}, "MarketPosition": {"properties": {"fees_paid": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Fees paid on fill orders, in cents.", "format": "int64", "type": "integer"}, "fees_paid_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Fees paid on fill orders, in dollars.", "type": "string"}, "last_updated_ts": {"description": "Last time the position is updated.", "format": "date-time", "type": "string"}, "market_exposure": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Cost of the aggregate market position in cents.", "format": "int64", "type": "integer"}, "market_exposure_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Cost of the aggregate market position in dollars.", "type": "string"}, "position": {"description": "Number of contracts bought in this market. Negative means NO contracts and positive means YES contracts.", "type": "integer"}, "realized_pnl": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Locked in profit and loss, in cents.", "format": "int64", "type": "integer"}, "realized_pnl_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Locked in profit and loss, in dollars.", "type": "string"}, "resting_orders_count": {"description": "Aggregate size of resting orders in contract units.", "type": "integer"}, "ticker": {"description": "Unique identifier for the market.", "type": "string"}, "total_traded": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Total spent on this market in cents.", "format": "int64", "type": "integer"}, "total_traded_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Total spent on this market in dollars.", "type": "string"}}, "type": "object"}, "Milestone": {"properties": {"category": {"description": "Category of the milestone.", "type": "string"}, "details": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.unimodel.Details", "description": "Additional details about the milestone.", "type": "object"}, "end_date": {"description": "End date of the milestone, if any.", "format": "date-time", "type": "string"}, "id": {"description": "Unique identifier for the milestone.", "type": "string"}, "last_updated_ts": {"description": "Last time this structured target was updated.", "format": "date-time", "type": "string"}, "notification_message": {"description": "Notification message for the milestone.", "type": "string"}, "primary_event_tickers": {"description": "List of event tickers directly related to the outcome of this milestone.", "items": {"type": "string"}, "type": "array"}, "related_event_tickers": {"description": "List of event tickers related to this milestone.", "items": {"type": "string"}, "type": "array"}, "source_id": {"description": "Source id of milestone if available.", "type": "string"}, "start_date": {"description": "Start date of the milestone.", "format": "date-time", "type": "string"}, "title": {"description": "Title of the milestone.", "type": "string"}, "type": {"description": "Type of the milestone.", "type": "string"}}, "type": "object"}, "MveSelectedLeg": {"properties": {"event_ticker": {"type": "string"}, "market_ticker": {"type": "string"}, "side": {"type": "string"}}, "type": "object"}, "OrderQueuePosition": {"properties": {"market_ticker": {"type": "string"}, "order_id": {"type": "string"}, "queue_position": {"type": "integer"}}, "type": "object"}, "PercentilePoint": {"properties": {"formatted_forecast": {"type": "string"}, "numerical_forecast": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Number"}, "percentile": {"type": "integer"}, "raw_numerical_forecast": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Number"}}, "type": "object"}, "PriceLevelDollars": {"properties": {"Count": {"type": "integer"}, "Dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "type": "string"}}, "type": "object"}, "PriceRange": {"properties": {"end": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Ending price for this range in dollars.", "type": "string"}, "start": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Starting price for this range in dollars.", "type": "string"}, "step": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Price step/tick size for this range in dollars.", "type": "string"}}, "type": "object"}, "SeriesFeeChange": {"properties": {"fee_multiplier": {"type": "number"}, "fee_type": {"type": "string"}, "id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.SeriesFeeChangeUUID", "type": "string"}, "scheduled_ts": {"format": "date-time", "type": "string"}, "series_ticker": {"type": "string"}}, "type": "object"}, "Settlement": {"properties": {"market_result": {"description": "The outcome of the market settlement. 'yes' = market resolved to YES, 'no' = market resolved to NO, 'scalar' = scalar market settled at a specific value, 'void' = market was voided/cancelled and all positions returned at original cost.", "enum": ["yes", "no", "scalar", "void"], "type": "string"}, "no_count": {"description": "Number of NO contracts owned at the time of settlement.", "type": "integer"}, "no_total_cost": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Total cost basis of all NO contracts in cents.", "format": "int64", "type": "integer"}, "revenue": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Total revenue earned from this settlement in cents (winning contracts pay out 100 cents each).", "format": "int64", "type": "integer"}, "settled_time": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OutputTime", "description": "Timestamp when the market was settled and payouts were processed."}, "ticker": {"description": "The ticker symbol of the market that was settled.", "type": "string"}, "value": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Payout of a single yes contract in cents.", "format": "int64", "type": "integer"}, "yes_count": {"description": "Number of YES contracts owned at the time of settlement.", "type": "integer"}, "yes_total_cost": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Total cost basis of all YES contracts in cents.", "format": "int64", "type": "integer"}}, "type": "object"}, "SettlementSource": {"properties": {"name": {"description": "The official name of the settlement source.", "type": "string"}, "url": {"description": "The URL of the settlement source.", "type": "string"}}, "type": "object"}, "TickerPair": {"properties": {"event_ticker": {"description": "Event ticker identifier.", "type": "string"}, "market_ticker": {"description": "Market ticker identifier.", "type": "string"}, "side": {"description": "Side of the market (yes or no).", "enum": ["yes", "no"], "type": "string"}}, "type": "object"}, "WeeklySchedule": {"properties": {"end_time": {"description": "End date and time for when this weekly schedule is no longer effective.", "format": "date-time", "type": "string"}, "friday": {"description": "Trading hours for Friday. May contain multiple sessions.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.DailySchedule"}, "type": "array"}, "monday": {"description": "Trading hours for Monday. May contain multiple sessions.", "items": {"properties": {"close_time": {"description": "Closing time in ET (Eastern Time) format HH:MM.", "type": "string"}, "open_time": {"description": "Opening time in ET (Eastern Time) format HH:MM.", "type": "string"}}, "type": "object"}, "type": "array"}, "saturday": {"description": "Trading hours for Saturday. May contain multiple sessions.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.DailySchedule"}, "type": "array"}, "start_time": {"description": "Start date and time for when this weekly schedule is effective.", "format": "date-time", "type": "string"}, "sunday": {"description": "Trading hours for Sunday. May contain multiple sessions.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.DailySchedule"}, "type": "array"}, "thursday": {"description": "Trading hours for Thursday. May contain multiple sessions.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.DailySchedule"}, "type": "array"}, "tuesday": {"description": "Trading hours for Tuesday. May contain multiple sessions.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.DailySchedule"}, "type": "array"}, "wednesday": {"description": "Trading hours for Wednesday. May contain multiple sessions.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.DailySchedule"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.common.api.JSONError": {"properties": {"code": {"description": "A short identifier for the error type.", "type": "string"}, "details": {"description": "Additional details about the error, if available.", "type": "string"}, "message": {"description": "A human-readable description of the error.", "type": "string"}, "service": {"description": "The name of the service that generated the error.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.common.communications.Quote": {"properties": {"accepted_side": {"description": "The side that was accepted (yes or no).", "type": "string"}, "accepted_ts": {"description": "Timestamp when the quote was accepted.", "format": "date-time", "type": "string"}, "cancellation_reason": {"description": "Reason for quote cancellation if cancelled.", "type": "string"}, "cancelled_ts": {"description": "Timestamp when the quote was cancelled.", "format": "date-time", "type": "string"}, "confirmed_ts": {"description": "Timestamp when the quote was confirmed.", "format": "date-time", "type": "string"}, "contracts": {"description": "Number of contracts in the quote.", "type": "integer"}, "created_ts": {"description": "Timestamp when the quote was created.", "format": "date-time", "type": "string"}, "creator_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.PublicCommunicationsID", "description": "Public communications ID of the quote creator.", "type": "string"}, "creator_order_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderUUID", "description": "Order ID for the quote creator (private field).", "type": "string"}, "creator_user_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.UserUUID", "description": "User ID of the quote creator (private field).", "type": "string"}, "executed_ts": {"description": "Timestamp when the quote was executed.", "format": "date-time", "type": "string"}, "id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.QuoteUUID", "description": "Unique identifier for the quote.", "type": "string"}, "market_ticker": {"description": "The ticker of the market this quote is for.", "type": "string"}, "no_bid": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Bid price for NO contracts, in cents.", "format": "int64", "type": "integer"}, "no_contracts_offered": {"description": "Number of NO contracts offered in the quote.", "type": "integer"}, "no_contracts_offered_effective_american_odds": {"description": "Filled only for target cost based RFQs.", "type": "string"}, "rest_remainder": {"description": "Whether to rest the remainder of the quote after execution.", "type": "boolean"}, "rfq_creator_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.PublicCommunicationsID", "description": "Public communications ID of the RFQ creator.", "type": "string"}, "rfq_creator_order_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderUUID", "description": "Order ID for the RFQ creator (private field).", "type": "string"}, "rfq_creator_user_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.UserUUID", "description": "User ID of the RFQ creator (private field).", "type": "string"}, "rfq_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.RfqUUID", "description": "ID of the RFQ this quote is responding to.", "type": "string"}, "rfq_target_cost_centi_cents": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Money", "description": "Total value requested in the RFQin centi-cents.", "format": "int64", "type": "integer"}, "status": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.communications.QuoteStatus", "description": "Current status of the quote.", "type": "string"}, "updated_ts": {"description": "Timestamp when the quote was last updated.", "format": "date-time", "type": "string"}, "yes_bid": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Bid price for YES contracts, in cents.", "format": "int64", "type": "integer"}, "yes_contracts_offered": {"description": "Number of YES contracts offered in the quote.", "type": "integer"}, "yes_contracts_offered_effective_american_odds": {"description": "Filled only for target cost based RFQs.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.common.communications.QuoteStatus": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.communications.RFQ": {"properties": {"cancellation_reason": {"description": "Reason for RFQ cancellation if cancelled.", "type": "string"}, "cancelled_ts": {"description": "Timestamp when the RFQ was cancelled.", "format": "date-time", "type": "string"}, "contracts": {"description": "Number of contracts requested in the RFQ.", "type": "integer"}, "created_ts": {"description": "Timestamp when the RFQ was created.", "format": "date-time", "type": "string"}, "creator_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.PublicCommunicationsID", "description": "Public communications ID of the RFQ creator.", "type": "string"}, "creator_user_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.UserUUID", "description": "User ID of the RFQ creator (private field).", "type": "string"}, "id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.RfqUUID", "description": "Unique identifier for the RFQ.", "type": "string"}, "market_ticker": {"description": "The ticker of the market this RFQ is for.", "type": "string"}, "mve_collection_ticker": {"description": "Ticker of the MVE collection this market belongs to.", "type": "string"}, "mve_selected_legs": {"description": "Selected legs for the MVE collection.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.communications.TickerPair"}, "type": "array"}, "rest_remainder": {"description": "Whether to rest the remainder of the RFQ after execution.", "type": "boolean"}, "status": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.communications.RFQStatus", "description": "Current status of the RFQ (open, closed).", "type": "string"}, "target_cost_centi_cents": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Money", "description": "Total value of the RFQ in centi-cents.", "format": "int64", "type": "integer"}, "updated_ts": {"description": "Timestamp when the RFQ was last updated.", "format": "date-time", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.common.communications.RFQStatus": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.exchange_metadata.AnnouncementStatus": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.exchange_metadata.AnnouncementType": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.exchange_metadata.DailySchedule": {"properties": {"close_time": {"description": "Closing time in ET (Eastern Time) format HH:MM.", "type": "string"}, "open_time": {"description": "Opening time in ET (Eastern Time) format HH:MM.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.common.exchange_metadata.Schedule": {"properties": {"maintenance_windows": {"description": "Scheduled maintenance windows, during which the exchange may be unavailable.", "items": {"properties": {"end_datetime": {"description": "End date and time of the maintenance window.", "format": "date-time", "type": "string"}, "start_datetime": {"description": "Start date and time of the maintenance window.", "format": "date-time", "type": "string"}}, "type": "object"}, "type": "array"}, "standard_hours": {"description": "The standard operating hours of the exchange. All times are expressed in ET. Outside of these times trading will be unavailable.", "items": {"properties": {"end_time": {"description": "End date and time for when this weekly schedule is no longer effective.", "format": "date-time", "type": "string"}, "friday": {"description": "Trading hours for Friday. May contain multiple sessions.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.DailySchedule"}, "type": "array"}, "monday": {"description": "Trading hours for Monday. May contain multiple sessions.", "items": {"properties": {"close_time": {"description": "Closing time in ET (Eastern Time) format HH:MM.", "type": "string"}, "open_time": {"description": "Opening time in ET (Eastern Time) format HH:MM.", "type": "string"}}, "type": "object"}, "type": "array"}, "saturday": {"description": "Trading hours for Saturday. May contain multiple sessions.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.DailySchedule"}, "type": "array"}, "start_time": {"description": "Start date and time for when this weekly schedule is effective.", "format": "date-time", "type": "string"}, "sunday": {"description": "Trading hours for Sunday. May contain multiple sessions.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.DailySchedule"}, "type": "array"}, "thursday": {"description": "Trading hours for Thursday. May contain multiple sessions.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.DailySchedule"}, "type": "array"}, "tuesday": {"description": "Trading hours for Tuesday. May contain multiple sessions.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.DailySchedule"}, "type": "array"}, "wednesday": {"description": "Trading hours for Wednesday. May contain multiple sessions.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.DailySchedule"}, "type": "array"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.common.types.Cent": {"format": "int64", "type": "integer"}, "github.com.Kalshi.exchange-infra.common.types.ClientOrderID": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.CollateralReturnType": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.FixedPointDollars": {"type": "string", "example": "0.2300", "description": "Fixed point representation of a subpenny dollar amount e.g. 1.2345 indicates $1.23 and 45/100 of a cent."}, "github.com.Kalshi.exchange-infra.common.types.Money": {"format": "int64", "type": "integer"}, "github.com.Kalshi.exchange-infra.common.types.MoneyUnit": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.Number": {}, "github.com.Kalshi.exchange-infra.common.types.OrderAction": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.OrderGroupUUID": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.OrderStatus": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.OrderType": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.OrderUUID": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.PriceLevelStructure": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.PublicCommunicationsID": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.QuoteUUID": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.RfqUUID": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.SelfTradePreventionType": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.SeriesFeeChangeUUID": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.TradeUUID": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.types.UserUUID": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.unimodel.Details": {"properties": {"key": {"$ref": "#/components/schemas/GenericObject"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.common.unimodel.MarketResult": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.unimodel.MarketStatus": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.unimodel.MarketStrikeType": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.unimodel.MarketType": {"type": "string"}, "github.com.Kalshi.exchange-infra.common.unimodel.ProductMetadata": {"properties": {"key": {"$ref": "#/components/schemas/GenericObject"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.common.unimodel.Side": {"type": "string"}, "github.com.Kalshi.exchange-infra.svc-api2.controllers.webcontroller.ErrorResponse": {"properties": {"error": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError", "type": "object"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.generated.GetPortfolioRestingOrderTotalValueResponse": {"properties": {"total_resting_order_value": {"type": "integer"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.generated.GetStructuredTargetResponse": {"properties": {"structured_target": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.generated.StructuredTarget", "type": "object"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.generated.GetStructuredTargetsResponse": {"properties": {"cursor": {"type": "string"}, "structured_targets": {"items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.generated.StructuredTarget"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.generated.StructuredTarget": {"properties": {"details": {"properties": {"key": {"type": "object"}}, "type": "object"}, "id": {"type": "string"}, "last_updated_ts": {"format": "date-time", "type": "string"}, "name": {"type": "string"}, "source_id": {"type": "string"}, "type": {"type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.AcceptQuoteRequest": {"properties": {"accepted_side": {"description": "The side of the quote to accept (yes or no).", "enum": ["yes", "no"], "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.AmendOrderRequest": {"properties": {"action": {"description": "Specifies if this is a buy or sell order. Cannot be amended and is validated against original order.", "enum": ["buy", "sell"], "type": "string"}, "client_order_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.ClientOrderID", "description": "Current client order ID that uniquely identifies the order to be amended. Only alphanumeric characters, '_', and '-' characters are permitted. The ID must also be 64 characters or less.", "pattern": "^[a-zA-Z0-9_-]{1,64}$", "type": "string"}, "count": {"description": "New total number of contracts for the order. This is the desired final count, not a delta.", "minimum": 1, "type": "integer"}, "no_price": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Price in cents for no side orders (0-100). Either yes_price or no_price must be provided based on the side.", "format": "int64", "maximum": 99, "minimum": 1, "type": "integer"}, "no_price_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Submitting price of the No side of the trade, in fixed-point dollars. Exactly one of yes_price, no_price, yes_price_dollars, and no_price_dollars must be passed.", "type": "string"}, "side": {"description": "Side of the order (yes or no). Cannot be amended and is validated against original order.", "enum": ["yes", "no"], "type": "string"}, "ticker": {"description": "Market ticker. Cannot be amended and is validated against original order.", "type": "string"}, "updated_client_order_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.ClientOrderID", "description": "New client order ID to be assigned to the order after successful amendment. Only alphanumeric characters, '_', and '-' characters are permitted. The ID must also be 64 characters or less.", "pattern": "^[a-zA-Z0-9_-]{1,64}$", "type": "string"}, "yes_price": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Price in cents for yes side orders (0-100). Either yes_price or no_price must be provided based on the side.", "format": "int64", "maximum": 99, "minimum": 1, "type": "integer"}, "yes_price_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Submitting price of the Yes side of the trade, in fixed-point dollars. Exactly one of yes_price, no_price, yes_price_dollars, and no_price_dollars must be passed.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.AmendOrderResponse": {"properties": {"old_order": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Order", "description": "Order model for the order before amendment.", "type": "object"}, "order": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Order", "description": "Order model for the order after amendment.", "type": "object"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.BatchCancelOrdersRequest": {"properties": {"ids": {"description": "An array of order IDs to cancel.", "items": {"type": "string"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.BatchCancelOrdersResponse": {"properties": {"orders": {"description": "An array of responses corresponding to each order cancellation request. Each response indicates success or failure for that specific cancellation.", "items": {"properties": {"error": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError", "description": "Error information if the order cancellation failed. If this field is populated, the order field will be null.", "type": "object"}, "order": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Order", "description": "Details of the canceled order. Will be null if an error occurred.", "type": "object"}, "order_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderUUID", "description": "The order ID to identify which order had an error during batch cancellation.", "type": "string"}, "reduced_by": {"description": "The number of contracts that were successfully canceled from this order.", "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.BatchCreateOrdersRequest": {"properties": {"orders": {"description": "An array of individual orders to place.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.CreateOrderRequest"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.BatchCreateOrdersResponse": {"properties": {"orders": {"description": "An array of responses corresponding to each order in the request. Each response indicates success or failure for that specific order.", "items": {"properties": {"client_order_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.ClientOrderID", "description": "The client-provided order ID from the request. This helps identify which order had an error in batch operations.", "type": "string"}, "error": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError", "description": "Error information if the order creation failed. If this field is populated, the order field will be null.", "type": "object"}, "order": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Order", "description": "Order confirmation details when the order is successfully created. Will be null if an error occurred.", "type": "object"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.BidAskDistribution": {"properties": {"close": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Offer price on the market at the end of the candlestick period.", "format": "int64", "type": "integer"}, "close_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Offer price on the market at the end of the candlestick period.", "type": "string"}, "high": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Highest offer price on the market during the candlestick period.", "format": "int64", "type": "integer"}, "high_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Highest offer price on the market during the candlestick period.", "type": "string"}, "low": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Lowest offer price on the market during the candlestick period.", "format": "int64", "type": "integer"}, "low_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Lowest offer price on the market during the candlestick period.", "type": "string"}, "open": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Offer price on the market at the start of the candlestick period.", "format": "int64", "type": "integer"}, "open_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Offer price on the market at the start of the candlestick period.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.CancelOrderResponse": {"properties": {"order": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Order", "description": "Order model for the order after cancellation.", "type": "object"}, "reduced_by": {"description": "How much the count of the order was reduced by because of this operation.", "type": "integer"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.CreateMarketInMultivariateEventCollectionRequest": {"properties": {"selected_markets": {"description": "List of selected markets that act as parameters to determine which market is created.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.TickerPair"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.CreateMarketInMultivariateEventCollectionResponse": {"properties": {"event_ticker": {"description": "Event ticker for the created market.", "type": "string"}, "market_ticker": {"description": "Market ticker for the created market.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.CreateOrderGroupRequest": {"properties": {"contracts_limit": {"description": "Specifies the maximum number of contracts that can be matched within this group.", "minimum": 1, "type": "integer"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.CreateOrderGroupResponse": {"properties": {"order_group_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderGroupUUID", "description": "Unique identifier for the newly created order group.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.CreateOrderRequest": {"properties": {"action": {"description": "Specifies if this is a buy or sell order.", "enum": ["buy", "sell"], "type": "string"}, "buy_max_cost": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "If type = market and action = buy, buy_max_cost represents the maximum cents that can be spent to acquire a position. When buy_max_cost is specified, the order will automatically have Fill-or-Kill (FoK) behavior.", "format": "int64", "type": "integer"}, "cancel_order_on_pause": {"description": "If this flag is set to true, the order will be canceled if the order is open and trading on the exchange is paused for any reason.", "type": "boolean"}, "client_order_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.ClientOrderID", "description": "Member-provided ID to attach to the order. Only alphanumeric characters, '_', and '-' characters are permitted. The ID must also be 64 characters or less.", "pattern": "^[a-zA-Z0-9_-]{1,64}$", "type": "string"}, "count": {"description": "Number of contracts to be bought or sold.", "type": "integer"}, "expiration_ts": {"description": "Expiration time of the order, in unix seconds. If not supplied, the order won't expire until explicitly cancelled (GTC). If the time is in the past, the order will attempt to fill and cancel any remainder (IOC). If the time is in the future, the unfilled quantity will expire at the specified time.", "type": "integer"}, "no_price": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Submitting price of the No side of the trade, in cents. Exactly one of yes_price and no_price must be passed.", "format": "int64", "maximum": 99, "minimum": 1, "type": "integer"}, "no_price_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Submitting price of the No side of the trade, in fixed-point dollars. Exactly one of yes_price, no_price, yes_price_dollars, and no_price_dollars must be passed.", "type": "string"}, "order_group_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderGroupUUID", "type": "string"}, "post_only": {"description": "If this flag is set to true, an order will be rejected if it crosses the spread and executes.", "type": "boolean"}, "self_trade_prevention_type": {"type": "string"}, "sell_position_capped": {"description": "SellPositionCapped prevents sell orders from exceeding your current position. This option can only be used with Immediate-or-Cancel (IoC) orders.", "type": "boolean"}, "sell_position_floor": {"description": "SellPositionFloor will not let you flip position for a market order if set to 0. Deprecated: Use sell_position_capped instead.", "type": "integer"}, "side": {"description": "Specifies if this is a 'yes' or 'no' order.", "enum": ["yes", "no"], "type": "string"}, "ticker": {"description": "The ticker of the market the order will be placed in.", "type": "string"}, "time_in_force": {"description": "Currently only 'fill_or_kill' and 'immediate_or_cancel' are supported. When not specified, defaults to GTC (Good Till Canceled) if no expiration_ts is provided, or GTT (Good Till Time) if expiration_ts is provided.", "enum": ["fill_or_kill", "immediate_or_cancel"], "type": "string"}, "yes_price": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Submitting price of the Yes side of the trade, in cents. Exactly one of yes_price and no_price must be passed.", "format": "int64", "maximum": 99, "minimum": 1, "type": "integer"}, "yes_price_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Submitting price of the Yes side of the trade, in fixed-point dollars. Exactly one of yes_price, no_price, yes_price_dollars, and no_price_dollars must be passed.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.CreateOrderResponse": {"properties": {"order": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Order", "description": "Order model for the order created.", "type": "object"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.CreateQuoteRequest": {"properties": {"no_bid": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "The bid price for NO contracts, in dollars.", "type": "string"}, "rest_remainder": {"description": "Whether to rest the remainder of the quote after execution.", "type": "boolean"}, "rfq_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.RfqUUID", "description": "The ID of the RFQ to quote on.", "type": "string"}, "yes_bid": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "The bid price for YES contracts, in dollars.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.CreateQuoteResponse": {"properties": {"id": {"description": "The ID of the newly created quote.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.CreateRFQRequest": {"properties": {"contracts": {"description": "The number of contracts for the RFQ.", "type": "integer"}, "market_ticker": {"description": "The ticker of the market for which to create an RFQ.", "type": "string"}, "rest_remainder": {"description": "Whether to rest the remainder of the RFQ after execution.", "type": "boolean"}, "target_cost_centi_cents": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Money", "description": "The target cost for the RFQ in centi-cents.", "format": "int64", "type": "integer"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.CreateRFQResponse": {"properties": {"id": {"description": "The ID of the newly created RFQ.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.DecreaseOrderRequest": {"properties": {"reduce_by": {"description": "Number of contracts to decrease the order's count by. One of reduce_by or reduce_to must be provided.", "type": "integer"}, "reduce_to": {"description": "Number of contracts to decrease the order to. If the orders remaining count is lower, it does nothing. One of reduce_by or reduce_to must be provided.", "type": "integer"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.DecreaseOrderResponse": {"properties": {"order": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Order", "description": "Order model for the order after decrease.", "type": "object"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.EmptyResponse": {"type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.EventData": {"properties": {"available_on_brokers": {"description": "Whether this event is available to trade on brokers.", "type": "boolean"}, "category": {"description": "Event category (deprecated, use series-level category instead).", "type": "string"}, "collateral_return_type": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.CollateralReturnType", "description": "Specifies how collateral is returned when markets settle (e.g., 'binary' for standard yes/no markets).", "type": "string"}, "event_ticker": {"description": "Unique identifier for this event.", "type": "string"}, "markets": {"description": "Array of markets associated with this event. Only populated when 'with_nested_markets=true' is specified in the request.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Market"}, "type": "array"}, "mutually_exclusive": {"description": "If true, only one market in this event can resolve to 'yes'. If false, multiple markets can resolve to 'yes'.", "type": "boolean"}, "series_ticker": {"description": "Unique identifier for the series this event belongs to.", "type": "string"}, "strike_date": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OutputTime", "description": "The specific date this event is based on. Only filled when the event uses a date strike (mutually exclusive with strike_period)."}, "strike_period": {"description": "The time period this event covers (e.g., 'week', 'month'). Only filled when the event uses a period strike (mutually exclusive with strike_date).", "type": "string"}, "sub_title": {"description": "Shortened descriptive title for the event.", "type": "string"}, "title": {"description": "Full title of the event.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.ExchangeStatus": {"properties": {"exchange_active": {"description": "False if the core Kalshi exchange is no longer taking any state changes at all. This includes but is not limited to trading, new users, and transfers. True unless we are under maintenance.", "type": "boolean"}, "exchange_estimated_resume_time": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OutputTime", "description": "Estimated downtime for the current exchange maintenance window. However, this is not guaranteed and can be extended."}, "trading_active": {"description": "True if we are currently permitting trading on the exchange. This is true during trading hours and false outside exchange hours. Kalshi reserves the right to pause at any time in case issues are detected.", "type": "boolean"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.Fill": {"properties": {"action": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderAction", "description": "Specifies if this order was submitted as a buy or a sell.", "enum": ["buy", "sell"], "type": "string"}, "count": {"description": "Number of contracts bought or sold in this fill.", "type": "integer"}, "created_time": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OutputTime", "description": "Timestamp when this fill was executed."}, "is_taker": {"description": "If true, this fill was a taker (removed liquidity from the order book).", "type": "boolean"}, "no_price": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Fill price for the no side in cents.", "format": "int64", "type": "integer"}, "no_price_fixed": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Fill price for the no side in fixed point dollars.", "type": "string"}, "order_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderUUID", "description": "Unique identifier for the order that resulted in this fill.", "type": "string"}, "purchased_side": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.unimodel.Side", "description": "Side of the purchased contracts. If user submitted a sell NO, this field will be yes.", "enum": ["yes", "no"], "type": "string"}, "side": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.unimodel.Side", "description": "Deprecated. Use purchased_side instead", "enum": ["yes", "no"], "type": "string"}, "ticker": {"description": "Unique identifier for the market.", "type": "string"}, "trade_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.TradeUUID", "description": "Unique identifier for this fill.", "type": "string"}, "yes_price": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Fill price for the yes side in cents.", "format": "int64", "type": "integer"}, "yes_price_fixed": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Fill price for the yes side in fixed point dollars.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.Fills": {"items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Fill"}, "type": "array"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetBalanceResponse": {"properties": {"balance": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Member's available balance in cents. This represents the amount available for trading.", "format": "int64", "type": "integer"}, "portfolio_value": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Member's portfolio value in cents. This includes the available balance plus the current value of all positions.", "format": "int64", "type": "integer"}, "updated_ts": {"description": "Timestamp of the last update to the balance.", "type": "integer"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetCommunicationsIDResponse": {"properties": {"communications_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.PublicCommunicationsID", "description": "A public communications ID which is used to identify the user.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetEventCandlesticksResponse": {"properties": {"adjusted_end_ts": {"description": "Adjusted end timestamp if the requested candlesticks would be larger than maxAggregateCandidates.", "type": "integer"}, "market_candlesticks": {"description": "Array of market candlestick arrays, one for each market in the event.", "items": {"items": {"properties": {"end_period_ts": {"description": "Unix timestamp for the inclusive end of the candlestick period.", "type": "integer"}, "open_interest": {"description": "Number of contracts bought on the market by end of the candlestick period (end_period_ts).", "type": "integer"}, "price": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.PriceDistribution", "description": "Open, high, low, close (OHLC) and more data for trade YES contract prices on the market during the candlestick period.", "type": "object"}, "volume": {"description": "Number of contracts bought on the market during the candlestick period.", "type": "integer"}, "yes_ask": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.BidAskDistribution", "description": "Open, high, low, close (OHLC) data for YES sell offers on the market during the candlestick period.", "type": "object"}, "yes_bid": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.BidAskDistribution", "description": "Open, high, low, close (OHLC) data for YES buy offers on the market during the candlestick period.", "type": "object"}}, "type": "object"}, "type": "array"}, "type": "array"}, "market_tickers": {"description": "Array of market tickers in the event.", "items": {"type": "string"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetEventForecastPercentilesHistoryResponse": {"properties": {"forecast_history": {"items": {"properties": {"end_period_ts": {"type": "integer"}, "event_ticker": {"type": "string"}, "percentile_points": {"items": {"properties": {"formatted_forecast": {"type": "string"}, "numerical_forecast": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Number"}, "percentile": {"type": "integer"}, "raw_numerical_forecast": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Number"}}, "type": "object"}, "type": "array"}, "period_interval": {"type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetEventMetadataResponse": {"properties": {"competition": {"type": "string"}, "competition_scope": {"type": "string"}, "image_url": {"type": "string"}, "settlement_sources": {"items": {"properties": {"name": {"description": "The official name of the settlement source.", "type": "string"}, "url": {"description": "The URL of the settlement source.", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetEventResponse": {"properties": {"event": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.EventData", "type": "object"}, "markets": {"items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Market"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetEventsResponse": {"properties": {"cursor": {"description": "Pagination cursor for the next page. Empty if there are no more results.", "type": "string"}, "events": {"description": "Array of events matching the query criteria.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.EventData"}, "type": "array"}, "milestones": {"description": "Array of milestones related to the events.", "items": {"properties": {"category": {"description": "Category of the milestone.", "type": "string"}, "details": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.unimodel.Details", "description": "Additional details about the milestone.", "type": "object"}, "end_date": {"description": "End date of the milestone, if any.", "format": "date-time", "type": "string"}, "id": {"description": "Unique identifier for the milestone.", "type": "string"}, "last_updated_ts": {"description": "Last time this structured target was updated.", "format": "date-time", "type": "string"}, "notification_message": {"description": "Notification message for the milestone.", "type": "string"}, "primary_event_tickers": {"description": "List of event tickers directly related to the outcome of this milestone.", "items": {"type": "string"}, "type": "array"}, "related_event_tickers": {"description": "List of event tickers related to this milestone.", "items": {"type": "string"}, "type": "array"}, "source_id": {"description": "Source id of milestone if available.", "type": "string"}, "start_date": {"description": "Start date of the milestone.", "format": "date-time", "type": "string"}, "title": {"description": "Title of the milestone.", "type": "string"}, "type": {"description": "Type of the milestone.", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetExchangeAnnouncementsResponse": {"properties": {"announcements": {"description": "A list of exchange-wide announcements.", "items": {"properties": {"delivery_time": {"description": "The time the announcement was delivered.", "format": "date-time", "type": "string"}, "message": {"description": "The message contained within the announcement.", "type": "string"}, "status": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.AnnouncementStatus", "description": "The current status of this announcement.", "enum": ["active", "inactive"], "type": "string"}, "type": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.AnnouncementType", "description": "The type of the announcement.", "enum": ["info", "warning", "error"], "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetExchangeScheduleResponse": {"properties": {"schedule": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.exchange_metadata.Schedule", "description": "A description of the exchange's schedule and operating hours.", "type": "object"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetFillsResponse": {"properties": {"cursor": {"description": "The Cursor represents a pointer to the next page of records in the pagination. Use the value returned here in the cursor query parameter for this end-point to get the next page containing limit records. An empty value of this field indicates there is no next page.", "type": "string"}, "fills": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Fills", "description": "List of fills for the member.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Fill"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetIncentiveProgramsResponse": {"properties": {"incentive_programs": {"items": {"properties": {"discount_factor_bps": {"type": "integer"}, "end_date": {"format": "date-time", "type": "string"}, "event_ticker": {"type": "string"}, "id": {"type": "string"}, "incentive_type": {"type": "string"}, "market_ticker": {"type": "string"}, "paid_out": {"type": "boolean"}, "period_reward": {"description": "Period reward in centicents.", "type": "integer"}, "series_ticker": {"type": "string"}, "start_date": {"format": "date-time", "type": "string"}, "target_size": {"type": "integer"}}, "type": "object"}, "type": "array"}, "next_cursor": {"type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetMarketCandlesticksResponse": {"properties": {"candlesticks": {"description": "Array of candlestick data points for the specified time range.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.MarketCandlestick"}, "type": "array"}, "ticker": {"description": "Unique identifier for the market.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetMarketOrderbookResponse": {"properties": {"orderbook": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OrderBook", "description": "The current order book showing yes and no price levels with their respective quantities.", "type": "object"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetMarketResponse": {"properties": {"market": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Market", "type": "object"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetMarketsResponse": {"properties": {"cursor": {"type": "string"}, "markets": {"items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Market"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetMilestoneResponse": {"properties": {"milestone": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Milestone", "description": "The milestone data.", "type": "object"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetMilestonesResponse": {"properties": {"cursor": {"description": "Cursor for pagination.", "type": "string"}, "milestones": {"description": "List of milestones.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Milestone"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetMultivariateEventCollectionLookupHistoryResponse": {"properties": {"lookup_points": {"description": "List of recent lookup points in the collection.", "items": {"properties": {"event_ticker": {"description": "Event ticker for the lookup point.", "type": "string"}, "last_queried_ts": {"description": "Timestamp when this lookup was last queried.", "format": "date-time", "type": "string"}, "market_ticker": {"description": "Market ticker for the lookup point.", "type": "string"}, "selected_markets": {"description": "Markets that were selected for this lookup.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.TickerPair"}, "type": "array"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetMultivariateEventCollectionResponse": {"properties": {"multivariate_contract": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.MultivariateEventCollection", "description": "The multivariate event collection.", "type": "object"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetMultivariateEventCollectionsResponse": {"properties": {"cursor": {"description": "The Cursor represents a pointer to the next page of records in the pagination. Use the value returned here in the cursor query parameter for this end-point to get the next page containing limit records. An empty value of this field indicates there is no next page.", "type": "string"}, "multivariate_contracts": {"description": "List of multivariate event collections.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.MultivariateEventCollection"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetOrderGroupResponse": {"properties": {"is_auto_cancel_enabled": {"description": "Whether auto-cancel is enabled for this order group.", "type": "boolean"}, "orders": {"description": "List of order IDs that belong to this order group.", "items": {"type": "string"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetOrderGroupsResponse": {"properties": {"order_groups": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OrderGroupSummaryList", "description": "List of order groups for the member.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OrderGroupSummary"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetOrderQueuePositionResponse": {"properties": {"queue_position": {"description": "The position of the order in the queue.", "type": "integer"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetOrderQueuePositionsResponse": {"properties": {"queue_positions": {"items": {"properties": {"market_ticker": {"type": "string"}, "order_id": {"type": "string"}, "queue_position": {"type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetOrderResponse": {"properties": {"order": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Order", "description": "Order for the member.", "type": "object"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetOrdersResponse": {"properties": {"cursor": {"description": "The Cursor represents a pointer to the next page of records in the pagination. Use the value returned here in the cursor query parameter for this end-point to get the next page containing limit records. An empty value of this field indicates there is no next page.", "type": "string"}, "orders": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OrderList", "description": "List of orders for the member.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Order"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetPositionsResponse": {"properties": {"cursor": {"description": "The Cursor represents a pointer to the next page of records in the pagination. Use the value returned here in the cursor query parameter for this end-point to get the next page containing limit records. An empty value of this field indicates there is no next page.", "type": "string"}, "event_positions": {"description": "List of event positions.", "items": {"properties": {"event_exposure": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Cost of the aggregate event position in cents.", "format": "int64", "type": "integer"}, "event_exposure_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Cost of the aggregate event position in dollars.", "type": "string"}, "event_ticker": {"description": "Unique identifier for events.", "type": "string"}, "fees_paid": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Fees paid on fill orders, in cents.", "format": "int64", "type": "integer"}, "fees_paid_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Fees paid on fill orders, in dollars.", "type": "string"}, "realized_pnl": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Locked in profit and loss, in cents.", "format": "int64", "type": "integer"}, "realized_pnl_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Locked in profit and loss, in dollars.", "type": "string"}, "resting_order_count": {"description": "Aggregate size of resting orders in contract units.", "type": "integer"}, "total_cost": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Total spent on this event in cents.", "format": "int64", "type": "integer"}, "total_cost_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Total spent on this event in dollars.", "type": "string"}}, "type": "object"}, "type": "array"}, "market_positions": {"description": "List of market positions.", "items": {"properties": {"fees_paid": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Fees paid on fill orders, in cents.", "format": "int64", "type": "integer"}, "fees_paid_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Fees paid on fill orders, in dollars.", "type": "string"}, "last_updated_ts": {"description": "Last time the position is updated.", "format": "date-time", "type": "string"}, "market_exposure": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Cost of the aggregate market position in cents.", "format": "int64", "type": "integer"}, "market_exposure_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Cost of the aggregate market position in dollars.", "type": "string"}, "position": {"description": "Number of contracts bought in this market. Negative means NO contracts and positive means YES contracts.", "type": "integer"}, "realized_pnl": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Locked in profit and loss, in cents.", "format": "int64", "type": "integer"}, "realized_pnl_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Locked in profit and loss, in dollars.", "type": "string"}, "resting_orders_count": {"description": "Aggregate size of resting orders in contract units.", "type": "integer"}, "ticker": {"description": "Unique identifier for the market.", "type": "string"}, "total_traded": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Total spent on this market in cents.", "format": "int64", "type": "integer"}, "total_traded_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Total spent on this market in dollars.", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetQuoteResponse": {"properties": {"quote": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.communications.Quote", "description": "The details of the requested quote.", "type": "object"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetQuotesResponse": {"properties": {"cursor": {"description": "Cursor for pagination to get the next page of results.", "type": "string"}, "quotes": {"description": "List of quotes matching the query criteria.", "items": {"properties": {"accepted_side": {"description": "The side that was accepted (yes or no).", "type": "string"}, "accepted_ts": {"description": "Timestamp when the quote was accepted.", "format": "date-time", "type": "string"}, "cancellation_reason": {"description": "Reason for quote cancellation if cancelled.", "type": "string"}, "cancelled_ts": {"description": "Timestamp when the quote was cancelled.", "format": "date-time", "type": "string"}, "confirmed_ts": {"description": "Timestamp when the quote was confirmed.", "format": "date-time", "type": "string"}, "contracts": {"description": "Number of contracts in the quote.", "type": "integer"}, "created_ts": {"description": "Timestamp when the quote was created.", "format": "date-time", "type": "string"}, "creator_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.PublicCommunicationsID", "description": "Public communications ID of the quote creator.", "type": "string"}, "creator_order_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderUUID", "description": "Order ID for the quote creator (private field).", "type": "string"}, "creator_user_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.UserUUID", "description": "User ID of the quote creator (private field).", "type": "string"}, "executed_ts": {"description": "Timestamp when the quote was executed.", "format": "date-time", "type": "string"}, "id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.QuoteUUID", "description": "Unique identifier for the quote.", "type": "string"}, "market_ticker": {"description": "The ticker of the market this quote is for.", "type": "string"}, "no_bid": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Bid price for NO contracts, in cents.", "format": "int64", "type": "integer"}, "no_contracts_offered": {"description": "Number of NO contracts offered in the quote.", "type": "integer"}, "no_contracts_offered_effective_american_odds": {"description": "Filled only for target cost based RFQs.", "type": "string"}, "rest_remainder": {"description": "Whether to rest the remainder of the quote after execution.", "type": "boolean"}, "rfq_creator_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.PublicCommunicationsID", "description": "Public communications ID of the RFQ creator.", "type": "string"}, "rfq_creator_order_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderUUID", "description": "Order ID for the RFQ creator (private field).", "type": "string"}, "rfq_creator_user_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.UserUUID", "description": "User ID of the RFQ creator (private field).", "type": "string"}, "rfq_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.RfqUUID", "description": "ID of the RFQ this quote is responding to.", "type": "string"}, "rfq_target_cost_centi_cents": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Money", "description": "Total value requested in the RFQin centi-cents.", "format": "int64", "type": "integer"}, "status": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.communications.QuoteStatus", "description": "Current status of the quote.", "type": "string"}, "updated_ts": {"description": "Timestamp when the quote was last updated.", "format": "date-time", "type": "string"}, "yes_bid": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Bid price for YES contracts, in cents.", "format": "int64", "type": "integer"}, "yes_contracts_offered": {"description": "Number of YES contracts offered in the quote.", "type": "integer"}, "yes_contracts_offered_effective_american_odds": {"description": "Filled only for target cost based RFQs.", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetRFQResponse": {"properties": {"rfq": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.communications.RFQ", "description": "The details of the requested RFQ.", "type": "object"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetRFQsResponse": {"properties": {"cursor": {"description": "Cursor for pagination to get the next page of results.", "type": "string"}, "rfqs": {"description": "List of RFQs matching the query criteria.", "items": {"properties": {"cancellation_reason": {"description": "Reason for RFQ cancellation if cancelled.", "type": "string"}, "cancelled_ts": {"description": "Timestamp when the RFQ was cancelled.", "format": "date-time", "type": "string"}, "contracts": {"description": "Number of contracts requested in the RFQ.", "type": "integer"}, "created_ts": {"description": "Timestamp when the RFQ was created.", "format": "date-time", "type": "string"}, "creator_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.PublicCommunicationsID", "description": "Public communications ID of the RFQ creator.", "type": "string"}, "creator_user_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.UserUUID", "description": "User ID of the RFQ creator (private field).", "type": "string"}, "id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.RfqUUID", "description": "Unique identifier for the RFQ.", "type": "string"}, "market_ticker": {"description": "The ticker of the market this RFQ is for.", "type": "string"}, "mve_collection_ticker": {"description": "Ticker of the MVE collection this market belongs to.", "type": "string"}, "mve_selected_legs": {"description": "Selected legs for the MVE collection.", "items": {"properties": {"event_ticker": {"description": "Event ticker for this leg.", "type": "string"}, "market_ticker": {"description": "Market ticker for this leg.", "type": "string"}, "side": {"description": "Side (YES/NO) for this leg.", "type": "string"}}, "type": "object"}, "type": "array"}, "rest_remainder": {"description": "Whether to rest the remainder of the RFQ after execution.", "type": "boolean"}, "status": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.communications.RFQStatus", "description": "Current status of the RFQ (open, closed).", "type": "string"}, "target_cost_centi_cents": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Money", "description": "Total value of the RFQ in centi-cents.", "format": "int64", "type": "integer"}, "updated_ts": {"description": "Timestamp when the RFQ was last updated.", "format": "date-time", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetSeriesFeeChangesResponse": {"properties": {"series_fee_change_arr": {"items": {"properties": {"fee_multiplier": {"type": "number"}, "fee_type": {"type": "string"}, "id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.SeriesFeeChangeUUID", "type": "string"}, "scheduled_ts": {"format": "date-time", "type": "string"}, "series_ticker": {"type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetSeriesListResponse": {"properties": {"series": {"description": "List of series data.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Series"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetSeriesResponse": {"properties": {"series": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Series", "description": "Data for the series.", "type": "object"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetSettlementsResponse": {"properties": {"cursor": {"description": "The Cursor represents a pointer to the next page of records in the pagination. Use the value returned here in the cursor query parameter for this end-point to get the next page containing limit records. An empty value of this field indicates there is no next page.", "type": "string"}, "settlements": {"description": "Settlement summaries for all markets the user participated in.", "items": {"properties": {"market_result": {"description": "The outcome of the market settlement. 'yes' = market resolved to YES, 'no' = market resolved to NO, 'scalar' = scalar market settled at a specific value, 'void' = market was voided/cancelled and all positions returned at original cost.", "enum": ["yes", "no", "scalar", "void"], "type": "string"}, "no_count": {"description": "Number of NO contracts owned at the time of settlement.", "type": "integer"}, "no_total_cost": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Total cost basis of all NO contracts in cents.", "format": "int64", "type": "integer"}, "revenue": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Total revenue earned from this settlement in cents (winning contracts pay out 100 cents each).", "format": "int64", "type": "integer"}, "settled_time": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OutputTime", "description": "Timestamp when the market was settled and payouts were processed."}, "ticker": {"description": "The ticker symbol of the market that was settled.", "type": "string"}, "value": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Payout of a single yes contract in cents.", "format": "int64", "type": "integer"}, "yes_count": {"description": "Number of YES contracts owned at the time of settlement.", "type": "integer"}, "yes_total_cost": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Total cost basis of all YES contracts in cents.", "format": "int64", "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.GetUserDataTimestampResponse": {"properties": {"as_of_time": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OutputTime", "description": "Timestamp when user data was last updated."}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.LookupTickersForMarketInMultivariateEventCollectionRequest": {"properties": {"selected_markets": {"description": "List of selected markets that act as parameters to determine which market is produced.", "items": {"properties": {"event_ticker": {"description": "Event ticker identifier.", "type": "string"}, "market_ticker": {"description": "Market ticker identifier.", "type": "string"}, "side": {"description": "Side of the market (yes or no).", "enum": ["yes", "no"], "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.LookupTickersForMarketInMultivariateEventCollectionResponse": {"properties": {"event_ticker": {"description": "Event ticker for the looked up market.", "type": "string"}, "market_ticker": {"description": "Market ticker for the looked up market.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.MultivariateEventCollection": {"properties": {"associated_event_tickers": {"description": "[DEPRECATED - Use associated_events instead] A list of events associated with the collection. Markets in these events can be passed as inputs to the Lookup and Create endpoints.", "items": {"type": "string"}, "type": "array"}, "associated_events": {"description": "List of events with their individual configuration.", "items": {"properties": {"active_quoters": {"description": "List of active quoters for this event.", "items": {"type": "string"}, "type": "array"}, "is_yes_only": {"description": "Whether only the 'yes' side can be used for this event.", "type": "boolean"}, "size_max": {"description": "Maximum number of markets from this event (inclusive). Null means no limit.", "type": "integer"}, "size_min": {"description": "Minimum number of markets from this event (inclusive). Null means no limit.", "type": "integer"}, "ticker": {"description": "The event ticker.", "type": "string"}}, "type": "object"}, "type": "array"}, "close_date": {"description": "The close date of the collection. After this time, the collection cannot be interacted with.", "format": "date-time", "type": "string"}, "collection_ticker": {"description": "Unique identifier for the collection.", "type": "string"}, "description": {"description": "Short description of the collection.", "type": "string"}, "functional_description": {"description": "A functional description of the collection describing how inputs affect the output.", "type": "string"}, "is_all_yes": {"description": "[DEPRECATED - Use associated_events instead] Whether the collection requires that only the market side of 'yes' may be used.", "type": "boolean"}, "is_ordered": {"description": "Whether the collection is ordered. If true, the order of markets passed into Lookup/Create affects the output. If false, the order does not matter.", "type": "boolean"}, "is_single_market_per_event": {"description": "[DEPRECATED - Use associated_events instead] Whether the collection accepts multiple markets from the same event passed into Lookup/Create.", "type": "boolean"}, "open_date": {"description": "The open date of the collection. Before this time, the collection cannot be interacted with.", "format": "date-time", "type": "string"}, "series_ticker": {"description": "Series associated with the collection. Events produced in the collection will be associated with this series.", "type": "string"}, "size_max": {"description": "The maximum number of markets that must be passed into Lookup/Create (inclusive).", "type": "integer"}, "size_min": {"description": "The minimum number of markets that must be passed into Lookup/Create (inclusive).", "type": "integer"}, "title": {"description": "Title of the collection.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.Order": {"properties": {"action": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderAction", "description": "Representing trade action; currently supports buy and sell.", "type": "string"}, "cancel_order_on_pause": {"description": "If this flag is set to true, the order will be canceled if the order is open and trading on the exchange is paused for any reason.", "type": "boolean"}, "client_order_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.ClientOrderID", "description": "Optional unique identifier for order placement.", "type": "string"}, "created_time": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OutputTime", "description": "Time of creation for the order."}, "expiration_time": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OutputTime", "description": "Time of expiration for this order."}, "fill_count": {"description": "The size of filled orders (maker + taker).", "type": "integer"}, "initial_count": {"description": "The initial size of the order (contract units).", "type": "integer"}, "last_update_time": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OutputTime", "description": "The last update to an order (modify, cancel, fill)."}, "maker_fees": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Fees paid on filled maker contracts, in cents.", "format": "int64", "type": "integer"}, "maker_fees_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Fees paid on filled maker contracts, in dollars.", "type": "string"}, "maker_fill_cost": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "The cost of filled maker orders in cents.", "format": "int64", "type": "integer"}, "no_price": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Submitting price of the No side of the trade, in cents. Exactly one of yes_price and no_price must be passed.", "format": "int64", "type": "integer"}, "no_price_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "The no price for this order in fixed-point dollars.", "type": "string"}, "order_group_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderGroupUUID", "type": "string"}, "order_id": {"description": "Unique identifier for orders.", "type": "string"}, "queue_position": {"description": "DEPRECATED: This field is deprecated and will always return 0. Please use the GET /portfolio/orders/{order_id}/queue_position endpoint instead", "type": "integer"}, "remaining_count": {"description": "The size of the remaining resting orders (contract units).", "type": "integer"}, "self_trade_prevention_type": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.SelfTradePreventionType", "type": "string"}, "side": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.unimodel.Side", "description": "Representing direction of the order; currently supports yes and no.", "type": "string"}, "status": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderStatus", "description": "The current status of this order.", "type": "string"}, "taker_fees": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Fees paid on filled taker contracts, in cents.", "format": "int64", "type": "integer"}, "taker_fees_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Fees paid on filled taker contracts, in dollars.", "type": "string"}, "taker_fill_cost": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "The cost of filled taker orders in cents.", "format": "int64", "type": "integer"}, "ticker": {"description": "Unique identifier for markets.", "type": "string"}, "type": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderType", "description": "Representing order type; currently supports 'market' and 'limit'.", "type": "string"}, "user_id": {"description": "Unique identifier for users.", "type": "string"}, "yes_price": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "The yes price for this order in cents.", "format": "int64", "type": "integer"}, "yes_price_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "The yes price for this order in fixed-point dollars.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.OrderBook": {"properties": {"no": {"description": "Array of price levels for no orders. Each level is [price, quantity] where price is in cents or centicents based on use_centi_cent parameter.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.PriceLevel"}, "type": "array"}, "no_dollars": {"type": "array", "example": [["0.2300", 100]], "description": "Array of price levels representing no orders. Each level is [dollars, contract_count]."}, "yes": {"description": "Array of price levels for yes orders. Each level is [price, quantity] where price is in cents or centicents based on use_centi_cent parameter.", "items": {"items": {"type": "integer"}, "type": "array"}, "type": "array"}, "yes_dollars": {"type": "array", "example": [["0.2300", 100]], "description": "Array of price levels representing yes orders. Each level is [dollars, contract_count]."}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.OrderGroupSummary": {"properties": {"id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.OrderGroupUUID", "description": "Unique identifier for the order group.", "type": "string"}, "is_auto_cancel_enabled": {"description": "Whether auto-cancel is enabled for this order group.", "type": "boolean"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.OrderGroupSummaryList": {"items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OrderGroupSummary"}, "type": "array"}, "github.com.Kalshi.exchange-infra.svc-api2.model.OrderList": {"items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.Order"}, "type": "array"}, "github.com.Kalshi.exchange-infra.svc-api2.model.OutputTime": {}, "github.com.Kalshi.exchange-infra.svc-api2.model.PriceDistribution": {"properties": {"close": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Last traded YES contract price on the market during the candlestick period. May be empty if there was no trade during the period.", "format": "int64", "type": "integer"}, "close_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Last traded YES contract price on the market during the candlestick period. May be empty if there was no trade during the period.", "type": "string"}, "high": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Highest traded YES contract price on the market during the candlestick period. May be empty if there was no trade during the period.", "format": "int64", "type": "integer"}, "high_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Highest traded YES contract price on the market during the candlestick period. May be empty if there was no trade during the period.", "type": "string"}, "low": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Lowest traded YES contract price on the market during the candlestick period. May be empty if there was no trade during the period.", "format": "int64", "type": "integer"}, "low_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Lowest traded YES contract price on the market during the candlestick period. May be empty if there was no trade during the period.", "type": "string"}, "mean": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Mean traded YES contract price on the market during the candlestick period. May be empty if there was no trade during the period.", "format": "int64", "type": "integer"}, "mean_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Mean traded YES contract price on the market during the candlestick period. May be empty if there was no trade during the period.", "type": "string"}, "open": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "First traded YES contract price on the market during the candlestick period. May be empty if there was no trade during the period.", "format": "int64", "type": "integer"}, "open_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "First traded YES contract price on the market during the candlestick period. May be empty if there was no trade during the period.", "type": "string"}, "previous": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Last traded YES contract price on the market before the candlestick period. May be empty if there were no trades before the period.", "format": "int64", "type": "integer"}, "previous_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Last traded YES contract price on the market before the candlestick period. May be empty if there were no trades before the period.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.PublicTrade": {"properties": {"count": {"description": "Number of contracts bought or sold in this trade.", "type": "integer"}, "created_time": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.OutputTime", "description": "Timestamp when this trade was executed."}, "no_price": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "No price for this trade in cents.", "format": "int64", "type": "integer"}, "no_price_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "No price for this trade in dollars.", "type": "string"}, "taker_side": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.unimodel.Side", "description": "Side for the taker of this trade.", "enum": ["yes", "no"], "type": "string"}, "ticker": {"description": "Unique identifier for the market.", "type": "string"}, "trade_id": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.TradeUUID", "description": "Unique identifier for this trade.", "type": "string"}, "yes_price": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.Cent", "description": "Yes price for this trade in cents.", "format": "int64", "type": "integer"}, "yes_price_dollars": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.types.FixedPointDollars", "description": "Yes price for this trade in dollars.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.PublicTradeList": {"items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.PublicTrade"}, "type": "array"}, "github.com.Kalshi.exchange-infra.svc-api2.model.PublicTradesGetResponse": {"properties": {"cursor": {"description": "The Cursor represents a pointer to the next page of records in the pagination. Use the value returned here in the cursor query parameter for this end-point to get the next page containing limit records. An empty value of this field indicates there is no next page.", "type": "string"}, "trades": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.PublicTradeList", "description": "List of public trades.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.PublicTrade"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.Series": {"properties": {"additional_prohibitions": {"description": "AdditionalProhibitions is a list of additional trading prohibitions for this series.", "items": {"type": "string"}, "type": "array"}, "category": {"description": "Category specifies the category which this series belongs to.", "type": "string"}, "contract_terms_url": {"description": "ContractTermsUrl is the URL to the current terms of the contract underlying the series.", "type": "string"}, "contract_url": {"description": "ContractUrl provides a direct link to the original filing of the contract which underlies the series.", "type": "string"}, "fee_multiplier": {"description": "FeeMultiplier is a floating point multiplier applied to the fee calculations.", "type": "number"}, "fee_type": {"description": "FeeType is a string representing the series' fee structure. Fee structures can be found at https://kalshi.com/docs/kalshi-fee-schedule.pdf. 'quadratic' is described by the General Trading Fees Table, 'quadratic_with_maker_fees' is described by the General Trading Fees Table with maker fees described in the Maker Fees section, 'flat' is described by the Specific Trading Fees Table.", "enum": ["quadratic", "quadratic_with_maker_fees", "flat"], "type": "string"}, "frequency": {"description": "Description of the frequency of the series. There is no fixed value set here, but will be something human-readable like: weekly, daily, one-off.", "type": "string"}, "product_metadata": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.unimodel.ProductMetadata", "description": "Internal product metadata of the series.", "type": "object"}, "settlement_sources": {"description": "SettlementSources specifies the official sources used for the determination of markets within the series. Methodology is defined in the rulebook.", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.SettlementSource"}, "type": "array"}, "tags": {"description": "Tags specifies the subjects that this series relates to, multiple series from different categories can have the same tags.", "items": {"type": "string"}, "type": "array"}, "ticker": {"description": "Ticker that identifies this series.", "type": "string"}, "title": {"description": "Title describing the series. For full context use you should use this field with the title field of the events belonging to this series.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.TickerPair": {"properties": {"event_ticker": {"description": "Event ticker identifier.", "type": "string"}, "market_ticker": {"description": "Market ticker identifier.", "type": "string"}, "side": {"description": "Side of the market (yes or no).", "enum": ["yes", "no"], "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.UserCreateApiKeyRequest": {"properties": {"name": {"description": "Name for the API key. This helps identify the key's purpose.", "type": "string"}, "public_key": {"description": "RSA public key in PEM format. This will be used to verify signatures on API requests.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.UserCreateApiKeyResponse": {"properties": {"api_key_id": {"description": "Unique identifier for the newly created API key.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.UserGenerateApiKeyRequest": {"properties": {"name": {"description": "Name for the API key. This helps identify the key's purpose.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.UserGenerateApiKeyResponse": {"properties": {"api_key_id": {"description": "Unique identifier for the newly generated API key.", "type": "string"}, "private_key": {"description": "RSA private key in PEM format. This must be stored securely and cannot be retrieved again after this response.", "type": "string"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.UserGetApiKeysResponse": {"properties": {"api_keys": {"description": "List of all API keys associated with the user.", "items": {"properties": {"api_key_id": {"description": "Unique identifier for the API key.", "type": "string"}, "created_ts": {"description": "Timestamp when the API key was created.", "format": "date-time", "type": "string"}, "name": {"description": "User-provided name for the API key.", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}, "github.com.Kalshi.exchange-infra.svc-api2.model.Market": {"type": "object", "description": "Contains information about a market", "properties": {"ticker": {"type": "string", "description": "Unique identifier for markets"}, "event_ticker": {"type": "string", "description": "Unique identifier for events"}, "market_type": {"type": "string", "description": "Type of market (binary, scalar)"}, "title": {"type": "string", "description": "Full title describing this market"}, "subtitle": {"type": "string", "description": "Shortened title for this market"}, "yes_sub_title": {"type": "string", "description": "Shortened title for the yes side"}, "no_sub_title": {"type": "string", "description": "Shortened title for the no side"}, "open_time": {"type": "string", "format": "date-time", "description": "Time when trading begins"}, "close_time": {"type": "string", "format": "date-time", "description": "Time when trading ends"}, "expiration_time": {"type": "string", "format": "date-time", "description": "Time when market expires"}, "latest_expiration_time": {"type": "string", "format": "date-time", "description": "Latest possible expiration time"}, "settlement_timer_seconds": {"type": "integer", "description": "Settlement timer in seconds"}, "status": {"type": "string", "description": "Current market status"}, "response_price_units": {"type": "string", "description": "Price units for response"}, "notional_value": {"type": "integer", "description": "Notional value of contract"}, "notional_value_dollars": {"type": "string", "description": "Notional value of contract in dollars", "example": "0.2300"}, "tick_size": {"type": "integer", "description": "Minimum price movement"}, "yes_bid": {"type": "integer", "description": "Highest YES buy offer price"}, "yes_bid_dollars": {"type": "string", "description": "Highest YES buy offer price in dollars", "example": "0.2300"}, "yes_ask": {"type": "integer", "description": "Lowest YES sell offer price"}, "yes_ask_dollars": {"type": "string", "description": "Lowest YES sell offer price in dollars", "example": "0.2300"}, "no_bid": {"type": "integer", "description": "Highest NO buy offer price"}, "no_bid_dollars": {"type": "string", "description": "Highest NO buy offer price in dollars", "example": "0.2300"}, "no_ask": {"type": "integer", "description": "Lowest NO sell offer price"}, "no_ask_dollars": {"type": "string", "description": "Lowest NO sell offer price in dollars", "example": "0.2300"}, "last_price": {"type": "integer", "description": "Last traded price"}, "last_price_dollars": {"type": "string", "description": "Last traded price in dollars", "example": "0.2300"}, "previous_yes_bid": {"type": "integer", "description": "Previous YES bid price"}, "previous_yes_bid_dollars": {"type": "string", "description": "Previous YES bid price in dollars", "example": "0.2300"}, "previous_yes_ask": {"type": "integer", "description": "Previous YES ask price"}, "previous_yes_ask_dollars": {"type": "string", "description": "Previous YES ask price in dollars", "example": "0.2300"}, "previous_price": {"type": "integer", "description": "Previous traded price"}, "previous_price_dollars": {"type": "string", "description": "Previous traded price in dollars", "example": "0.2300"}, "volume": {"type": "integer", "description": "Trading volume"}, "volume_24h": {"type": "integer", "description": "24h trading volume"}, "liquidity": {"type": "integer", "description": "Current liquidity"}, "liquidity_dollars": {"type": "string", "description": "Current liquidity in dollars", "example": "0.2300"}, "open_interest": {"type": "integer", "description": "Open interest"}, "result": {"type": "string", "description": "Settlement result"}, "can_close_early": {"type": "boolean", "description": "Whether market can close early"}, "expiration_value": {"type": "string", "description": "Expiration value"}, "category": {"type": "string", "description": "Market category"}, "risk_limit_cents": {"type": "integer", "description": "Risk limit in cents"}, "rules_primary": {"type": "string", "description": "Primary market rules"}, "rules_secondary": {"type": "string", "description": "Secondary market rules"}, "settlement_value": {"type": "integer", "description": "The settlement value of the YES/LONG side of the contract. Only filled after determination."}, "settlement_value_dollars": {"type": "string", "description": "The settlement value of the YES/LONG side of the contract. Only filled after determination.", "example": "0.2300"}, "price_level_structure": {"type": "string", "enum": ["linear_cent", "tapered_deci_cent", "deci_cent"], "description": "Price level structure name for this market."}, "price_ranges": {"type": "array", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.PriceRange"}, "description": "Valid price ranges for orders on this market."}}, "required": ["ticker", "event_ticker", "market_type", "subtitle", "yes_sub_title", "no_sub_title", "open_time", "close_time", "expiration_time", "latest_expiration_time", "settlement_timer_seconds", "status", "response_price_units", "notional_value", "tick_size", "yes_bid", "yes_ask", "no_bid", "no_ask", "last_price", "previous_yes_bid", "previous_yes_ask", "previous_price", "volume", "volume_24h", "liquidity", "open_interest", "result", "can_close_early", "expiration_value", "category", "risk_limit_cents", "rules_primary", "rules_secondary", "price_level_structure", "price_ranges"]}, "github.com.Kalshi.exchange-infra.svc-api2.model.PriceLevel": {"type": "array", "items": {"type": "integer"}, "description": "Array of 2 integers representing [cents, contract_count]."}, "github.com.Kalshi.exchange-infra.svc-api2.model.PriceRange": {"type": "object", "description": "Represents a range of prices with a specific tick size.", "properties": {"start": {"type": "string", "description": "Starting price for this range in dollars.", "example": "0.00"}, "end": {"type": "string", "description": "Ending price for this range in dollars.", "example": "1.00"}, "step": {"type": "string", "description": "Price step/tick size for this range in dollars.", "example": "0.01"}}, "required": ["start", "end", "step"], "example": {"start": "0.00", "end": "1.00", "step": "0.01"}}, "GithubComKalshiExchangeInfraSvcApi2ModelMarket": {"type": "object", "description": "Contains information about a market", "properties": {"ticker": {"type": "string", "description": "Unique identifier for markets"}, "event_ticker": {"type": "string", "description": "Unique identifier for events"}, "market_type": {"type": "string", "description": "Type of market (binary, scalar)"}, "title": {"type": "string", "description": "Full title describing this market"}, "subtitle": {"type": "string", "description": "Shortened title for this market"}, "yes_sub_title": {"type": "string", "description": "Shortened title for the yes side"}, "no_sub_title": {"type": "string", "description": "Shortened title for the no side"}, "open_time": {"type": "string", "format": "date-time", "description": "Time when trading begins"}, "close_time": {"type": "string", "format": "date-time", "description": "Time when trading ends"}, "expiration_time": {"type": "string", "format": "date-time", "description": "Time when market expires"}, "latest_expiration_time": {"type": "string", "format": "date-time", "description": "Latest possible expiration time"}, "settlement_timer_seconds": {"type": "integer", "description": "Settlement timer in seconds"}, "status": {"type": "string", "description": "Current market status"}, "response_price_units": {"type": "string", "description": "Price units for response"}, "notional_value": {"type": "integer", "description": "Notional value of contract"}, "notional_value_dollars": {"type": "string", "description": "Notional value of contract in dollars", "example": "0.2300"}, "tick_size": {"type": "integer", "description": "Minimum price movement"}, "yes_bid": {"type": "integer", "description": "Highest YES buy offer price"}, "yes_bid_dollars": {"type": "string", "description": "Highest YES buy offer price in dollars", "example": "0.2300"}, "yes_ask": {"type": "integer", "description": "Lowest YES sell offer price"}, "yes_ask_dollars": {"type": "string", "description": "Lowest YES sell offer price in dollars", "example": "0.2300"}, "no_bid": {"type": "integer", "description": "Highest NO buy offer price"}, "no_bid_dollars": {"type": "string", "description": "Highest NO buy offer price in dollars", "example": "0.2300"}, "no_ask": {"type": "integer", "description": "Lowest NO sell offer price"}, "no_ask_dollars": {"type": "string", "description": "Lowest NO sell offer price in dollars", "example": "0.2300"}, "last_price": {"type": "integer", "description": "Last traded price"}, "last_price_dollars": {"type": "string", "description": "Last traded price in dollars", "example": "0.2300"}, "previous_yes_bid": {"type": "integer", "description": "Previous YES bid price"}, "previous_yes_bid_dollars": {"type": "string", "description": "Previous YES bid price in dollars", "example": "0.2300"}, "previous_yes_ask": {"type": "integer", "description": "Previous YES ask price"}, "previous_yes_ask_dollars": {"type": "string", "description": "Previous YES ask price in dollars", "example": "0.2300"}, "previous_price": {"type": "integer", "description": "Previous traded price"}, "previous_price_dollars": {"type": "string", "description": "Previous traded price in dollars", "example": "0.2300"}, "volume": {"type": "integer", "description": "Trading volume"}, "volume_24h": {"type": "integer", "description": "24h trading volume"}, "liquidity": {"type": "integer", "description": "Current liquidity"}, "liquidity_dollars": {"type": "string", "description": "Current liquidity in dollars", "example": "0.2300"}, "open_interest": {"type": "integer", "description": "Open interest"}, "result": {"type": "string", "description": "Settlement result"}, "can_close_early": {"type": "boolean", "description": "Whether market can close early"}, "expiration_value": {"type": "string", "description": "Expiration value"}, "category": {"type": "string", "description": "Market category"}, "risk_limit_cents": {"type": "integer", "description": "Risk limit in cents"}, "rules_primary": {"type": "string", "description": "Primary market rules"}, "rules_secondary": {"type": "string", "description": "Secondary market rules"}, "settlement_value": {"type": "integer", "description": "The settlement value of the YES/LONG side of the contract. Only filled after determination."}, "settlement_value_dollars": {"type": "string", "description": "The settlement value of the YES/LONG side of the contract. Only filled after determination.", "example": "0.2300"}, "price_level_structure": {"type": "string", "enum": ["linear_cent", "tapered_deci_cent", "deci_cent"], "description": "Price level structure name for this market."}, "price_ranges": {"type": "array", "items": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.PriceRange"}, "description": "Valid price ranges for orders on this market."}}, "required": ["ticker", "event_ticker", "market_type", "subtitle", "yes_sub_title", "no_sub_title", "open_time", "close_time", "expiration_time", "latest_expiration_time", "settlement_timer_seconds", "status", "response_price_units", "notional_value", "tick_size", "yes_bid", "yes_ask", "no_bid", "no_ask", "last_price", "previous_yes_bid", "previous_yes_ask", "previous_price", "volume", "volume_24h", "liquidity", "open_interest", "result", "can_close_early", "expiration_value", "category", "risk_limit_cents", "rules_primary", "rules_secondary", "price_level_structure", "price_ranges"]}}}, "info": {"contact": {"email": "support@kalshi.com", "name": "Kalshi API Team"}, "description": "This documentation describes Kalshi's trading API (known as Trade API v2). By using this API, you agree to Kalshi's Developer Agreement.", "title": "Kalshi Trade API", "version": "2.0.6"}, "openapi": "3.0.0", "paths": {"/api_keys": {"get": {"description": " Endpoint for retrieving all API keys associated with the authenticated user.  API keys allow programmatic access to the platform without requiring username/password authentication. Each key has a unique identifier and name.", "operationId": "GetApiKeys", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.UserGetApiKeysResponse"}}}, "description": ""}}, "summary": "Get API Keys", "tags": ["api-keys"]}, "post": {"description": " Endpoint for creating a new API key with a user-provided public key.  This endpoint allows users with Premier or Market Maker API usage levels to create API keys by providing their own RSA public key. The platform will use this public key to verify signatures on API requests.", "operationId": "CreateApiKey", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.UserCreateApiKeyRequest"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.UserCreateApiKeyResponse"}}}, "description": ""}}, "summary": "Create API Key", "tags": ["api-keys"]}}, "/api_keys/generate": {"post": {"description": " Endpoint for generating a new API key with an automatically created key pair.  This endpoint generates both a public and private RSA key pair. The public key is stored on the platform, while the private key is returned to the user and must be stored securely. The private key cannot be retrieved again.", "operationId": "GenerateApiKey", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.UserGenerateApiKeyRequest"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.UserGenerateApiKeyResponse"}}}, "description": ""}}, "summary": "Generate API Key", "tags": ["api-keys"]}}, "/api_keys/{api_key}": {"delete": {"description": " Endpoint for deleting an existing API key.  This endpoint permanently deletes an API key. Once deleted, the key can no longer be used for authentication. This action cannot be undone.", "operationId": "DeleteApiKey", "parameters": [{"description": "API key ID to delete", "in": "path", "name": "api_key", "required": true, "schema": {"description": "API key ID to delete", "type": "string"}}], "responses": {"204": {"description": "No Content - API key successfully deleted"}}, "summary": "Delete API Key", "tags": ["api-keys"]}}, "/cached/events/{ticker}/forecast_history": {"get": {"description": " End-point for getting the historical raw and formatted forecast numbers for an event. See the response body for full information on what is returned. Data is cached and so is slightly lagged.", "parameters": [{"description": "Ticker", "in": "path", "name": "ticker", "required": true, "schema": {"description": "Ticker", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetEventForecastPercentilesHistoryResponse"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError"}}}, "description": ""}, "401": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError"}}}, "description": ""}, "403": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError"}}}, "description": ""}, "500": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError"}}}, "description": ""}}}}, "/communications/id": {"get": {"description": " Endpoint for getting the communications ID of the logged-in user.", "operationId": "GetCommunicationsID", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetCommunicationsIDResponse"}}}, "description": ""}}, "summary": "Get Communications ID", "tags": ["communications"]}}, "/communications/quotes": {"get": {"description": " Endpoint for getting quotes", "operationId": "GetQuotes", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetQuotesResponse"}}}, "description": ""}}, "summary": "Get Quotes", "tags": ["communications"]}, "post": {"description": " Endpoint for creating a quote in response to an RFQ", "operationId": "CreateQuote", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.CreateQuoteRequest"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.CreateQuoteResponse"}}}, "description": ""}}, "summary": "Create Quote", "tags": ["communications"]}}, "/communications/quotes/{quote_id}": {"delete": {"description": " Endpoint for deleting a quote, which means it can no longer be accepted.", "operationId": "DeleteQuote", "parameters": [{"description": "Quote ID", "in": "path", "name": "quote_id", "required": true, "schema": {"description": "Quote ID", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "summary": "Delete Quote", "tags": ["communications"]}, "get": {"description": " Endpoint for getting a particular quote", "operationId": "GetQuote", "parameters": [{"description": "Quote ID", "in": "path", "name": "quote_id", "required": true, "schema": {"description": "Quote ID", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetQuoteResponse"}}}, "description": ""}}, "summary": "Get Quote", "tags": ["communications"]}}, "/communications/quotes/{quote_id}/accept": {"put": {"description": " Endpoint for accepting a quote. This will require the quoter to confirm", "operationId": "AcceptQuote", "parameters": [{"description": "Quote ID", "in": "path", "name": "quote_id", "required": true, "schema": {"description": "Quote ID", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.AcceptQuoteRequest"}}}, "required": true}, "responses": {"204": {"description": "No Content"}}, "summary": "Accept Quote", "tags": ["communications"]}}, "/communications/quotes/{quote_id}/confirm": {"put": {"description": " Endpoint for confirming a quote. This will start a timer for order execution", "operationId": "ConfirmQuote", "parameters": [{"description": "Quote ID", "in": "path", "name": "quote_id", "required": true, "schema": {"description": "Quote ID", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "summary": "Confirm Quote", "tags": ["communications"]}}, "/communications/rfqs": {"get": {"description": " Endpoint for getting RFQs", "operationId": "GetRFQs", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetRFQsResponse"}}}, "description": ""}}, "summary": "Get RFQs", "tags": ["communications"]}, "post": {"description": " Endpoint for creating a new RFQ", "operationId": "CreateRFQ", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.CreateRFQRequest"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.CreateRFQResponse"}}}, "description": ""}}, "summary": "Create RFQ", "tags": ["communications"]}}, "/communications/rfqs/{rfq_id}": {"delete": {"description": " Endpoint for deleting an RFQ by ID", "operationId": "DeleteRFQ", "parameters": [{"description": "RFQ ID", "in": "path", "name": "rfq_id", "required": true, "schema": {"description": "RFQ ID", "type": "string"}}], "responses": {"204": {"description": "No Content"}}, "summary": "Delete RFQ", "tags": ["communications"]}, "get": {"description": " Endpoint for getting a single RFQ by id", "operationId": "GetRFQ", "parameters": [{"description": "RFQ ID", "in": "path", "name": "rfq_id", "required": true, "schema": {"description": "RFQ ID", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetRFQResponse"}}}, "description": ""}}, "summary": "Get RFQ", "tags": ["communications"]}}, "/events": {"get": {"description": " Endpoint for getting data about all events.  An event represents a real-world occurrence that can be traded on, such as an election, sports game, or economic indicator release. Events contain one or more markets where users can place trades on different outcomes.  This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-200, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.", "operationId": "GetEvents", "parameters": [{"description": "Parameter to specify the number of results per page. Defaults to 100. Maximum value is 200.", "in": "query", "name": "limit", "schema": {"description": "Parameter to specify the number of results per page. Defaults to 100. Maximum value is 200.", "format": "int64", "type": "integer"}}, {"description": "Parameter to specify the pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.", "in": "query", "name": "cursor", "schema": {"description": "Parameter to specify the pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.", "type": "string"}}, {"description": "Parameter to specify if nested markets should be included in the response. When true, each event will include a 'markets' field containing a list of Market objects associated with that event.", "in": "query", "name": "with_nested_markets", "schema": {"description": "Parameter to specify if nested markets should be included in the response. When true, each event will include a 'markets' field containing a list of Market objects associated with that event.", "type": "boolean"}}, {"description": "Filter by event status. Possible values: 'open', 'closed', 'settled'. Leave empty to return events with any status.", "in": "query", "name": "status", "schema": {"description": "Filter by event status. Possible values: 'open', 'closed', 'settled'. Leave empty to return events with any status.", "type": "string"}}, {"description": "Filter events by series ticker. Returns only events belonging to the specified series.", "in": "query", "name": "series_ticker", "schema": {"description": "Filter events by series ticker. Returns only events belonging to the specified series.", "type": "string"}}, {"description": "Filter events with at least one market with close timestamp greater than this Unix timestamp (in seconds).", "in": "query", "name": "min_close_ts", "schema": {"description": "Filter events with at least one market with close timestamp greater than this Unix timestamp (in seconds).", "format": "int64", "type": "integer"}}, {"description": "If true, includes related milestones as a field alongside events.", "in": "query", "name": "with_milestones", "schema": {"description": "If true, includes related milestones as a field alongside events.", "type": "boolean"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetEventsResponse"}}}, "description": ""}}, "summary": "Get Events", "tags": ["market"]}}, "/events/{event_ticker}": {"get": {"description": " Endpoint for getting data about an event by its ticker.  An event represents a real-world occurrence that can be traded on, such as an election, sports game, or economic indicator release. Events contain one or more markets where users can place trades on different outcomes.", "operationId": "GetEvent", "parameters": [{"description": "Event ticker", "in": "path", "name": "event_ticker", "required": true, "schema": {"description": "Event ticker", "type": "string"}}, {"description": "If true, markets are included within the event object. If false (default), markets are returned as a separate top-level field in the response.", "in": "query", "name": "with_nested_markets", "schema": {"description": "If true, markets are included within the event object. If false (default), markets are returned as a separate top-level field in the response.", "type": "boolean"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetEventResponse"}}}, "description": ""}}, "summary": "Get Event", "tags": ["market"]}}, "/events/{event_ticker}/metadata": {"get": {"description": " Endpoint for getting metadata about an event by its ticker.  Returns only the metadata information for an event.", "operationId": "GetEventMetadata", "parameters": [{"description": "Event ticker", "in": "path", "name": "event_ticker", "required": true, "schema": {"description": "Event ticker", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetEventMetadataResponse"}}}, "description": ""}}, "summary": "Get Event Metadata", "tags": ["market"]}}, "/exchange/announcements": {"get": {"description": " Endpoint for getting all exchange-wide announcements.", "operationId": "GetExchangeAnnouncements", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetExchangeAnnouncementsResponse"}}}, "description": ""}}, "summary": "Get Exchange Announcements"}}, "/exchange/schedule": {"get": {"description": " Endpoint for getting the exchange schedule.", "operationId": "GetExchangeSchedule", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetExchangeScheduleResponse"}}}, "description": ""}}, "summary": "Get Exchange Schedule"}}, "/exchange/status": {"get": {"description": " Endpoint for getting the exchange status.", "operationId": "GetExchangeStatus", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.ExchangeStatus"}}}, "description": ""}}, "summary": "Get Exchange Status"}}, "/exchange/user_data_timestamp": {"get": {"description": " There is typically a short delay before exchange events are reflected in the API endpoints. Whenever possible, combine API responses to PUT/POST/DELETE requests with websocket data to obtain the most accurate view of the exchange state. This endpoint provides an approximate indication of when the data from the following endpoints was last validated: GetBalance, GetOrder(s), GetFills, GetPositions", "operationId": "GetUserDataTimestamp", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetUserDataTimestampResponse"}}}, "description": ""}}, "summary": "Get User Data Timestamp"}}, "/incentive_programs": {"get": {"description": " List volume incentives with optional filters. Volume incentives are rewards programs for trading activity on specific markets.", "operationId": "GetIncentivePrograms", "parameters": [{"description": "Number of results per page. Defaults to 100. Maximum value is 10000.", "in": "query", "name": "limit", "schema": {"description": "Number of results per page. Defaults to 100. Maximum value is 10000.", "format": "int64", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetIncentiveProgramsResponse"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.controllers.webcontroller.ErrorResponse"}}}, "description": "Invalid request parameters"}, "500": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.controllers.webcontroller.ErrorResponse"}}}, "description": "Internal server error"}}, "summary": "Get Incentives", "tags": ["incentive_programs"]}}, "/markets": {"get": {"description": " Endpoint for listing and discovering markets on Kalshi. A market represents a specific binary outcome within an event that users can trade on (e.g., \"Will candidate X win?\"). Markets have yes/no positions, current prices, volume, and settlement rules. This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-1000, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.", "operationId": "GetMarkets", "parameters": [{"description": "Number of results per page. Defaults to 100. Maximum value is 1000.", "in": "query", "name": "limit", "schema": {"description": "Number of results per page. Defaults to 100. Maximum value is 1000.", "format": "int64", "type": "integer"}}, {"description": "Pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.", "in": "query", "name": "cursor", "schema": {"description": "Pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.", "type": "string"}}, {"description": "Filter markets by event ticker. Returns only markets belonging to the specified event.", "in": "query", "name": "event_ticker", "schema": {"description": "Filter markets by event ticker. Returns only markets belonging to the specified event.", "type": "string"}}, {"description": "Filter markets by series ticker. Returns only markets belonging to events in the specified series.", "in": "query", "name": "series_ticker", "schema": {"description": "Filter markets by series ticker. Returns only markets belonging to events in the specified series.", "type": "string"}}, {"description": "Filter markets that close before this Unix timestamp.", "in": "query", "name": "max_close_ts", "schema": {"description": "Filter markets that close before this Unix timestamp.", "format": "int64", "type": "integer"}}, {"description": "Filter markets that close after this Unix timestamp.", "in": "query", "name": "min_close_ts", "schema": {"description": "Filter markets that close after this Unix timestamp.", "format": "int64", "type": "integer"}}, {"description": "Filter by market status. Comma-separated list. Possible values: 'unopened', 'open', 'closed', 'settled'. Leave empty to return markets with any status.", "in": "query", "name": "status", "schema": {"description": "Filter by market status. Comma-separated list. Possible values: 'unopened', 'open', 'closed', 'settled'. Leave empty to return markets with any status.", "type": "string"}}, {"description": "Filter by specific market tickers. Comma-separated list of market tickers to retrieve.", "in": "query", "name": "tickers", "schema": {"description": "Filter by specific market tickers. Comma-separated list of market tickers to retrieve.", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetMarketsResponse"}}}, "description": ""}}, "summary": "Get Markets", "tags": ["market"]}}, "/markets/trades": {"get": {"description": " Endpoint for getting all trades for all markets.  A trade represents a completed transaction between two users on a specific market. Each trade includes the market ticker, price, quantity, and timestamp information.  This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-1000, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.", "operationId": "GetTrades", "parameters": [{"description": "Number of results per page. Defaults to 100. Maximum value is 1000.", "in": "query", "name": "limit", "schema": {"description": "Number of results per page. Defaults to 100. Maximum value is 1000.", "format": "int64", "type": "integer"}}, {"description": "Pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.", "in": "query", "name": "cursor", "schema": {"description": "Pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.", "type": "string"}}, {"description": "Filter trades by market ticker. Returns only trades for the specified market.", "in": "query", "name": "ticker", "schema": {"description": "Filter trades by market ticker. Returns only trades for the specified market.", "type": "string"}}, {"description": "Filter trades that occurred after this Unix timestamp.", "in": "query", "name": "min_ts", "schema": {"description": "Filter trades that occurred after this Unix timestamp.", "format": "int64", "type": "integer"}}, {"description": "Filter trades that occurred before this Unix timestamp.", "in": "query", "name": "max_ts", "schema": {"description": "Filter trades that occurred before this Unix timestamp.", "format": "int64", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.PublicTradesGetResponse"}}}, "description": ""}}, "summary": "Get Trades", "tags": ["market"]}}, "/markets/{ticker}": {"get": {"description": " Endpoint for getting data about a specific market by its ticker. A market represents a specific binary outcome within an event that users can trade on (e.g., \"Will candidate X win?\"). Markets have yes/no positions, current prices, volume, and settlement rules.", "operationId": "GetMarket", "parameters": [{"description": "Market ticker - unique identifier for the specific market", "in": "path", "name": "ticker", "required": true, "schema": {"description": "Market ticker - unique identifier for the specific market", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetMarketResponse"}}}, "description": ""}}, "summary": "Get Market", "tags": ["market"]}}, "/markets/{ticker}/orderbook": {"get": {"description": " Endpoint for getting the current order book for a specific market.  The order book shows all active bid orders for both yes and no sides of a binary market. It returns yes bids and no bids only (no asks are returned). This is because in binary markets, a bid for yes at price X is equivalent to an ask for no at price (100-X). For example, a yes bid at 7\u00a2 is the same as a no ask at 93\u00a2, with identical contract sizes.  Each side shows price levels with their corresponding quantities and order counts, organized from best to worst prices.", "operationId": "GetMarketOrderbook", "parameters": [{"description": "Market ticker - unique identifier for the specific market", "in": "path", "name": "ticker", "required": true, "schema": {"description": "Market ticker - unique identifier for the specific market", "type": "string"}}, {"description": "Maximum number of price levels to return per side (yes bids/no bids). Defaults to all levels. Maximum value is 100.", "in": "query", "name": "depth", "schema": {"description": "Maximum number of price levels to return per side (yes bids/no bids). Defaults to all levels. Maximum value is 100.", "format": "int64", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetMarketOrderbookResponse"}}}, "description": ""}}, "summary": "Get Market Order Book", "tags": ["market"]}}, "/milestones": {"get": {"description": " Endpoint for getting data about milestones with optional filtering.", "operationId": "GetMilestones", "parameters": [{"description": "Minimum start date to filter milestones. Format: RFC3339 timestamp", "in": "query", "name": "minimum_start_date", "schema": {"description": "Minimum start date to filter milestones. Format: RFC3339 timestamp", "type": "string"}}, {"description": "Filter by milestone category", "in": "query", "name": "category", "schema": {"description": "Filter by milestone category", "type": "string"}}, {"description": "Filter by competition", "in": "query", "name": "competition", "schema": {"description": "Filter by competition", "type": "string"}}, {"description": "Filter by milestone type", "in": "query", "name": "type", "schema": {"description": "Filter by milestone type", "type": "string"}}, {"description": "Filter by related event ticker", "in": "query", "name": "related_event_ticker", "schema": {"description": "Filter by related event ticker", "type": "string"}}, {"description": "Number of milestones to return per page", "in": "query", "name": "limit", "required": true, "schema": {"description": "Number of milestones to return per page", "format": "int64", "type": "integer"}}, {"description": "Pagination cursor. Use the cursor value returned from the previous response to get the next page of results", "in": "query", "name": "cursor", "schema": {"description": "Pagination cursor. Use the cursor value returned from the previous response to get the next page of results", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetMilestonesResponse"}}}, "description": ""}}, "summary": "Get Milestones", "tags": ["milestone"]}}, "/milestones/{milestone_id}": {"get": {"description": " Endpoint for getting data about a specific milestone by its ID.", "operationId": "GetMilestone", "parameters": [{"description": "Milestone ID", "in": "path", "name": "milestone_id", "required": true, "schema": {"description": "Milestone ID", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetMilestoneResponse"}}}, "description": ""}}, "summary": "Get Milestone", "tags": ["milestone"]}}, "/multivariate_event_collections": {"get": {"description": " Endpoint for getting data about multivariate event collections.", "operationId": "GetMultivariateEventCollections", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetMultivariateEventCollectionsResponse"}}}, "description": ""}}, "summary": "Get Multivariate Event Collections", "tags": ["collection"]}}, "/multivariate_event_collections/{collection_ticker}": {"get": {"description": " Endpoint for getting data about a multivariate event collection by its ticker.", "operationId": "GetMultivariateEventCollection", "parameters": [{"description": "Collection ticker", "in": "path", "name": "collection_ticker", "required": true, "schema": {"description": "Collection ticker", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetMultivariateEventCollectionResponse"}}}, "description": ""}}, "summary": "Get Multivariate Event Collection", "tags": ["collection"]}, "post": {"description": " Endpoint for looking up an individual market in a multivariate event collection. This endpoint must be hit at least once before trading or looking up a market.", "operationId": "CreateMarketInMultivariateEventCollection", "parameters": [{"description": "Collection ticker", "in": "path", "name": "collection_ticker", "required": true, "schema": {"description": "Collection ticker", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.CreateMarketInMultivariateEventCollectionRequest"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.CreateMarketInMultivariateEventCollectionResponse"}}}, "description": ""}}, "summary": "Create Market In Multivariate Event Collection", "tags": ["collection"]}}, "/multivariate_event_collections/{collection_ticker}/lookup": {"get": {"description": " Endpoint for retrieving which markets in an event collection were recently looked up.", "operationId": "GetMultivariateEventCollectionLookupHistory", "parameters": [{"description": "Collection ticker", "in": "path", "name": "collection_ticker", "required": true, "schema": {"description": "Collection ticker", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetMultivariateEventCollectionLookupHistoryResponse"}}}, "description": ""}}, "summary": "Get Multivariate Event Collection Lookup History", "tags": ["collection"]}, "put": {"description": " Endpoint for looking up an individual market in a multivariate event collection. If CreateMarketInMultivariateEventCollection has never been hit with that variable combination before, this will return a 404.", "operationId": "LookupTickersForMarketInMultivariateEventCollection", "parameters": [{"description": "Collection ticker", "in": "path", "name": "collection_ticker", "required": true, "schema": {"description": "Collection ticker", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.LookupTickersForMarketInMultivariateEventCollectionRequest"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.LookupTickersForMarketInMultivariateEventCollectionResponse"}}}, "description": ""}}, "summary": "Lookup Tickers For Market In Multivariate Event Collection", "tags": ["collection"]}}, "/portfolio/balance": {"get": {"description": " Endpoint for getting the balance and portfolio value of a member. Both values are returned in cents.", "operationId": "GetBalance", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetBalanceResponse"}}}, "description": ""}}, "summary": "Get Balance", "tags": ["portfolio"]}}, "/portfolio/fills": {"get": {"description": " Endpoint for getting all fills for the member. A fill is when a trade you have is matched.", "operationId": "GetFills", "parameters": [{"description": "Restricts the response to trades in a specific market.", "in": "query", "name": "ticker", "schema": {"description": "Restricts the response to trades in a specific market.", "type": "string"}}, {"description": "Restricts the response to trades related to a specific order.", "in": "query", "name": "order_id", "schema": {"description": "Restricts the response to trades related to a specific order.", "type": "string"}}, {"description": "Restricts the response to trades after a timestamp.", "in": "query", "name": "min_ts", "schema": {"description": "Restricts the response to trades after a timestamp.", "format": "int64", "type": "integer"}}, {"description": "Restricts the response to trades before a timestamp.", "in": "query", "name": "max_ts", "schema": {"description": "Restricts the response to trades before a timestamp.", "format": "int64", "type": "integer"}}, {"description": "Parameter to specify the number of results per page. Defaults to 100.", "in": "query", "name": "limit", "schema": {"description": "Parameter to specify the number of results per page. Defaults to 100.", "format": "int64", "type": "integer"}}, {"description": "The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.", "in": "query", "name": "cursor", "schema": {"description": "The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetFillsResponse"}}}, "description": ""}}, "summary": "Get Fills", "tags": ["portfolio"]}}, "/portfolio/order_groups": {"get": {"description": " Retrieves all order groups for the authenticated user.", "operationId": "GetOrderGroups", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetOrderGroupsResponse"}}}, "description": ""}}, "summary": "Get Order Groups", "tags": ["portfolio"]}}, "/portfolio/order_groups/create": {"post": {"description": " Creates a new order group with a contracts limit. When the limit is hit, all orders in the group are cancelled and no new orders can be placed until reset.", "operationId": "CreateOrderGroup", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.CreateOrderGroupRequest"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.CreateOrderGroupResponse"}}}, "description": ""}}, "summary": "Create Order Group", "tags": ["portfolio"]}}, "/portfolio/order_groups/{order_group_id}": {"delete": {"description": " Deletes an order group and cancels all orders within it. This permanently removes the group.", "operationId": "DeleteOrderGroup", "parameters": [{"description": "Order group ID", "in": "path", "name": "order_group_id", "required": true, "schema": {"description": "Order group ID", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.EmptyResponse"}}}, "description": ""}}, "summary": "Delete Order Group", "tags": ["portfolio"]}, "get": {"description": " Retrieves details for a single order group including all order IDs and auto-cancel status.", "operationId": "GetOrderGroup", "parameters": [{"description": "Order group ID", "in": "path", "name": "order_group_id", "required": true, "schema": {"description": "Order group ID", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetOrderGroupResponse"}}}, "description": ""}}, "summary": "Get Order Group", "tags": ["portfolio"]}}, "/portfolio/order_groups/{order_group_id}/reset": {"put": {"description": " Resets the order group's matched contracts counter to zero, allowing new orders to be placed again after the limit was hit.", "operationId": "ResetOrderGroup", "parameters": [{"description": "Order group ID", "in": "path", "name": "order_group_id", "required": true, "schema": {"description": "Order group ID", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.EmptyResponse"}}}, "description": ""}}, "summary": "Reset Order Group", "tags": ["portfolio"]}}, "/portfolio/orders": {"get": {"description": " Endpoint for getting all orders for the member.", "operationId": "GetOrders", "parameters": [{"description": "Restricts the response to orders in a single market.", "in": "query", "name": "ticker", "schema": {"description": "Restricts the response to orders in a single market.", "type": "string"}}, {"description": "Restricts the response to orders in one or more events. Multiple event tickers can be provided as a comma-separated list.", "in": "query", "name": "event_ticker", "schema": {"description": "Restricts the response to orders in one or more events. Multiple event tickers can be provided as a comma-separated list.", "type": "string"}}, {"description": "Restricts the response to orders after a timestamp, formatted as a Unix Timestamp.", "in": "query", "name": "min_ts", "schema": {"description": "Restricts the response to orders after a timestamp, formatted as a Unix Timestamp.", "format": "int64", "type": "integer"}}, {"description": "Restricts the response to orders before a timestamp, formatted as a Unix Timestamp.", "in": "query", "name": "max_ts", "schema": {"description": "Restricts the response to orders before a timestamp, formatted as a Unix Timestamp.", "format": "int64", "type": "integer"}}, {"description": "Restricts the response to orders that have a certain status: resting, canceled, or executed.", "in": "query", "name": "status", "schema": {"description": "Restricts the response to orders that have a certain status: resting, canceled, or executed.", "type": "string"}}, {"description": "The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.", "in": "query", "name": "cursor", "schema": {"description": "The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.", "type": "string"}}, {"description": "Parameter to specify the number of results per page. Defaults to 100.", "in": "query", "name": "limit", "schema": {"description": "Parameter to specify the number of results per page. Defaults to 100.", "format": "int64", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetOrdersResponse"}}}, "description": ""}}, "summary": "Get Orders", "tags": ["portfolio"]}, "post": {"description": " Endpoint for submitting orders in a market.", "operationId": "CreateOrder", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.CreateOrderRequest"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.CreateOrderResponse"}}}, "description": ""}}, "summary": "Create Order", "tags": ["portfolio"]}}, "/portfolio/orders/batched": {"delete": {"description": " Endpoint for cancelling up to 20 orders at once. Available to members with advanced access only.", "operationId": "BatchCancelOrders", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.BatchCancelOrdersRequest"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.BatchCancelOrdersResponse"}}}, "description": ""}}, "summary": "Batch Cancel Orders", "tags": ["portfolio"]}, "post": {"description": " Endpoint for submitting a batch of orders. Each order in the batch is counted against the total rate limit for order operations. Consequently, the size of the batch is capped by the current per-second rate-limit configuration applicable to the user. At the moment of writing, the limit is 20 orders per batch. Available to members with advanced access only.", "operationId": "BatchCreateOrders", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.BatchCreateOrdersRequest"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.BatchCreateOrdersResponse"}}}, "description": ""}}, "summary": "Batch Create Orders", "tags": ["portfolio"]}}, "/portfolio/orders/queue_positions": {"get": {"description": " Endpoint for getting queue positions for all resting orders. Queue position represents the number of contracts that need to be matched before an order receives a partial or full match, determined using price-time priority.", "operationId": "GetOrderQueuePositions", "parameters": [{"description": "Comma-separated list of market tickers to filter by", "in": "query", "name": "market_tickers", "schema": {"description": "Comma-separated list of market tickers to filter by", "type": "string"}}, {"description": "Event ticker to filter by", "in": "query", "name": "event_ticker", "schema": {"description": "Event ticker to filter by", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetOrderQueuePositionsResponse"}}}, "description": ""}}, "summary": "Get Queue Positions for Orders", "tags": ["portfolio"]}}, "/portfolio/orders/{order_id}": {"delete": {"description": " Endpoint for canceling orders. The value for the orderId should match the id field of the order you want to decrease. Commonly, DELETE-type endpoints return 204 status with no body content on success. But we can't completely delete the order, as it may be partially filled already. Instead, the DeleteOrder endpoint reduce the order completely, essentially zeroing the remaining resting contracts on it. The zeroed order is returned on the response payload as a form of validation for the client.", "operationId": "CancelOrder", "parameters": [{"description": "Order ID", "in": "path", "name": "order_id", "required": true, "schema": {"description": "Order ID", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.CancelOrderResponse"}}}, "description": ""}}, "summary": "Cancel Order", "tags": ["portfolio"]}, "get": {"description": " Endpoint for getting a single order.", "operationId": "GetOrder", "parameters": [{"description": "Order ID", "in": "path", "name": "order_id", "required": true, "schema": {"description": "Order ID", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetOrderResponse"}}}, "description": ""}}, "summary": "Get Order", "tags": ["portfolio"]}}, "/portfolio/orders/{order_id}/amend": {"post": {"description": " Endpoint for amending the max number of fillable contracts and/or price in an existing order. Max fillable contracts is `remaining_count` + `fill_count`.", "operationId": "AmendOrder", "parameters": [{"description": "Order ID", "in": "path", "name": "order_id", "required": true, "schema": {"description": "Order ID", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.AmendOrderRequest"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.AmendOrderResponse"}}}, "description": ""}}, "summary": "Amend Order", "tags": ["portfolio"]}}, "/portfolio/orders/{order_id}/decrease": {"post": {"description": " Endpoint for decreasing the number of contracts in an existing order. This is the only kind of edit available on order quantity. Cancelling an order is equivalent to decreasing an order amount to zero.", "operationId": "DecreaseOrder", "parameters": [{"description": "Order ID", "in": "path", "name": "order_id", "required": true, "schema": {"description": "Order ID", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.DecreaseOrderRequest"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.DecreaseOrderResponse"}}}, "description": ""}}, "summary": "Decrease Order", "tags": ["portfolio"]}}, "/portfolio/orders/{order_id}/queue_position": {"get": {"description": " Endpoint for getting an order's queue position in the order book. This represents the amount of orders that need to be matched before this order receives a partial or full match. Queue position is determined using a price-time priority.", "operationId": "GetOrderQueuePosition", "parameters": [{"description": "Order ID", "in": "path", "name": "order_id", "required": true, "schema": {"description": "Order ID", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetOrderQueuePositionResponse"}}}, "description": ""}}, "summary": "Get Queue Position for Order", "tags": ["portfolio"]}}, "/portfolio/positions": {"get": {"description": " Endpoint for getting all market positions for the member.", "operationId": "GetPositions", "parameters": [{"description": "The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.", "in": "query", "name": "cursor", "schema": {"description": "The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.", "type": "string"}}, {"description": "Parameter to specify the number of results per page. Defaults to 100.", "in": "query", "name": "limit", "schema": {"description": "Parameter to specify the number of results per page. Defaults to 100.", "format": "int64", "type": "integer"}}, {"description": "Restricts the positions to those with any of following fields with non-zero values, as a comma separated list. The following values are accepted: position, total_traded, resting_order_count", "in": "query", "name": "count_filter", "schema": {"description": "Restricts the positions to those with any of following fields with non-zero values, as a comma separated list. The following values are accepted: position, total_traded, resting_order_count", "type": "string"}}, {"description": "Settlement status of the markets to return. Defaults to unsettled.", "in": "query", "name": "settlement_status", "schema": {"description": "Settlement status of the markets to return. Defaults to unsettled.", "type": "string"}}, {"description": "Ticker of desired positions.", "in": "query", "name": "ticker", "schema": {"description": "Ticker of desired positions.", "type": "string"}}, {"description": "Event ticker of desired positions.", "in": "query", "name": "event_ticker", "schema": {"description": "Event ticker of desired positions.", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetPositionsResponse"}}}, "description": ""}}, "summary": "Get Positions", "tags": ["portfolio"]}}, "/portfolio/settlements": {"get": {"description": " Endpoint for getting the member's settlements historical track.", "operationId": "GetSettlements", "parameters": [{"description": "Parameter to specify the number of results per page. Defaults to 100.", "in": "query", "name": "limit", "schema": {"description": "Parameter to specify the number of results per page. Defaults to 100.", "format": "int64", "type": "integer"}}, {"description": "Restricts the response to settlements in a specific market.", "in": "query", "name": "ticker", "schema": {"description": "Restricts the response to settlements in a specific market.", "type": "string"}}, {"description": "Restricts the response to settlements in a single event.", "in": "query", "name": "event_ticker", "schema": {"description": "Restricts the response to settlements in a single event.", "type": "string"}}, {"description": "Restricts the response to settlements after a timestamp.", "in": "query", "name": "min_ts", "schema": {"description": "Restricts the response to settlements after a timestamp.", "format": "int64", "type": "integer"}}, {"description": "Restricts the response to settlements before a timestamp.", "in": "query", "name": "max_ts", "schema": {"description": "Restricts the response to settlements before a timestamp.", "format": "int64", "type": "integer"}}, {"description": "The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.", "in": "query", "name": "cursor", "schema": {"description": "The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetSettlementsResponse"}}}, "description": ""}}, "summary": "Get Settlements", "tags": ["portfolio"]}}, "/portfolio/summary/total_resting_order_value": {"get": {"description": " Endpoint for getting the total value, in cents, of resting orders. This endpoint is only intended for use by FCM members (rare). Note: If you're uncertain about this endpoint, it likely does not apply to you.", "operationId": "GetPortfolioRestingOrderTotalValue", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.generated.GetPortfolioRestingOrderTotalValueResponse"}}}, "description": ""}}, "summary": "Get Portfolio Resting Order Total Value", "tags": ["portfolio"]}}, "/series": {"get": {"description": " Endpoint for getting data about multiple series with specified filters.  A series represents a template for recurring events that follow the same format and rules (e.g., \"Monthly Jobs Report\", \"Weekly Initial Jobless Claims\", \"Daily Weather in NYC\"). This endpoint allows you to browse and discover available series templates by category.", "operationId": "GetSeriesList", "parameters": [{"description": "Filter series by category. Returns only series belonging to the specified category.", "in": "query", "name": "category", "required": true, "schema": {"description": "Filter series by category. Returns only series belonging to the specified category.", "type": "string"}}, {"description": "Include additional product metadata in the response for each series.", "in": "query", "name": "include_product_metadata", "schema": {"description": "Include additional product metadata in the response for each series.", "type": "boolean"}}, {"description": "Comma-separated list of tags to filter series by (e.g., 'Rotten Tomatoes,Television'). Tags with spaces are supported. If specified, only series containing at least one of these tags will be returned.", "in": "query", "name": "tags", "schema": {"description": "Comma-separated list of tags to filter series by (e.g., 'Rotten Tomatoes,Television'). Tags with spaces are supported. If specified, only series containing at least one of these tags will be returned.", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetSeriesListResponse"}}}, "description": ""}}, "summary": "Get Series List", "tags": ["market"]}}, "/series/fee_changes": {"get": {"description": " End-point for getting data about all upcoming series fee changes.", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetSeriesFeeChangesResponse"}}}, "description": ""}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError"}}}, "description": ""}, "401": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError"}}}, "description": ""}, "403": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError"}}}, "description": ""}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError"}}}, "description": ""}, "500": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError"}}}, "description": ""}}}}, "/series/{series_ticker}": {"get": {"description": " Endpoint for getting data about a specific series by its ticker.  A series represents a template for recurring events that follow the same format and rules (e.g., \"Monthly Jobs Report\", \"Weekly Initial Jobless Claims\", \"Daily Weather in NYC\"). Series define the structure, settlement sources, and metadata that will be applied to each recurring event instance within that series.", "operationId": "GetSeries", "parameters": [{"description": "Series ticker - unique identifier for the specific series", "in": "path", "name": "series_ticker", "required": true, "schema": {"description": "Series ticker - unique identifier for the specific series", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetSeriesResponse"}}}, "description": ""}}, "summary": "Get Series", "tags": ["market"]}}, "/series/{series_ticker}/events/{ticker}/candlesticks": {"get": {"description": " End-point for returning aggregated data across all markets corresponding to an event.", "parameters": [{"description": "Series Ticker", "in": "path", "name": "series_ticker", "required": true, "schema": {"description": "Series Ticker", "type": "string"}}, {"description": "Event Ticker", "in": "path", "name": "ticker", "required": true, "schema": {"description": "Event Ticker", "type": "string"}}, {"description": "Start timestamp for the range", "in": "query", "name": "start_ts", "required": true, "schema": {"description": "Start timestamp for the range", "format": "int64", "type": "integer"}}, {"description": "End timestamp for the range", "in": "query", "name": "end_ts", "required": true, "schema": {"description": "End timestamp for the range", "format": "int64", "type": "integer"}}, {"description": "Specifies the length of each candlestick period, in minutes. Must be one minute, one hour, or one day.", "in": "query", "name": "period_interval", "required": true, "schema": {"description": "Specifies the length of each candlestick period, in minutes. Must be one minute, one hour, or one day.", "format": "int64", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetEventCandlesticksResponse"}}}, "description": ""}, "500": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.common.api.JSONError"}}}, "description": ""}}}}, "/series/{series_ticker}/markets/{ticker}/candlesticks": {"get": {"description": " Endpoint for getting historical candlestick data for a specific market.  Candlesticks provide OHLC (Open, High, Low, Close) price data aggregated over specific time intervals. Each candlestick represents the price movement during that period, including opening and closing prices, as well as the highest and lowest prices reached.  The period_interval determines the time length of each candlestick and must be one of: 1 (1 minute), 60 (1 hour), or 1440 (1 day). The start_ts and end_ts parameters define the time range for the data.", "operationId": "GetMarketCandlesticks", "parameters": [{"description": "Series ticker - the series that contains the target market", "in": "path", "name": "series_ticker", "required": true, "schema": {"description": "Series ticker - the series that contains the target market", "type": "string"}}, {"description": "Market ticker - unique identifier for the specific market", "in": "path", "name": "ticker", "required": true, "schema": {"description": "Market ticker - unique identifier for the specific market", "type": "string"}}, {"description": "Start timestamp (Unix timestamp). Candlesticks will include those ending on or after this time.", "in": "query", "name": "start_ts", "required": true, "schema": {"description": "Start timestamp (Unix timestamp). Candlesticks will include those ending on or after this time.", "format": "int64", "type": "integer"}}, {"description": "End timestamp (Unix timestamp). Candlesticks will include those ending on or before this time.", "in": "query", "name": "end_ts", "required": true, "schema": {"description": "End timestamp (Unix timestamp). Candlesticks will include those ending on or before this time.", "format": "int64", "type": "integer"}}, {"description": "Time period length of each candlestick in minutes. Valid values: 1 (1 minute), 60 (1 hour), 1440 (1 day).", "in": "query", "name": "period_interval", "required": true, "schema": {"description": "Time period length of each candlestick in minutes. Valid values: 1 (1 minute), 60 (1 hour), 1440 (1 day).", "format": "int64", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.model.GetMarketCandlesticksResponse"}}}, "description": ""}}, "summary": "Get Market Candlesticks", "tags": ["market"]}}, "/structured_targets": {"get": {"description": " Endpoint for getting data about structured targets.", "operationId": "GetStructuredTargets", "parameters": [{"description": "Type of structured target", "in": "query", "name": "type", "schema": {"description": "Type of structured target", "type": "string"}}, {"description": "Competition filter", "in": "query", "name": "competition", "schema": {"description": "Competition filter", "type": "string"}}, {"description": "Page size (min: 1, max: 2000)", "in": "query", "name": "page_size", "schema": {"description": "Page size (min: 1, max: 2000)", "format": "int64", "type": "integer"}}, {"description": "Pagination cursor", "in": "query", "name": "cursor", "schema": {"description": "Pagination cursor", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.generated.GetStructuredTargetsResponse"}}}, "description": ""}}, "summary": "Get Structured Targets", "tags": ["structured_target"]}}, "/structured_targets/{structured_target_id}": {"get": {"description": " Endpoint for getting data about a specific structured target by its ID.", "operationId": "GetStructuredTarget", "parameters": [{"description": "Structured Target ID", "in": "path", "name": "structured_target_id", "required": true, "schema": {"description": "Structured Target ID", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/github.com.Kalshi.exchange-infra.svc-api2.generated.GetStructuredTargetResponse"}}}, "description": ""}}, "summary": "Get Structured Target", "tags": ["structured_target"]}}}, "servers": [{"description": " Production Server", "url": "https://api.elections.kalshi.com/trade-api/v2"}]}
